ARM GAS  /tmp/ccgS1raD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB146:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** float Kp=0, Ki=0, Kd=0, set_point=0, config=0, mode = 0;
  27:Core/Src/main.c **** volatile int16_t count = 0;
  28:Core/Src/main.c **** volatile float uk = 0, position = 0;
  29:Core/Src/main.c **** int Value_PWM=0;
  30:Core/Src/main.c **** uint8_t data[30] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  31:Core/Src/main.c **** 	
ARM GAS  /tmp/ccgS1raD.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart4;
  54:Core/Src/main.c **** DMA_HandleTypeDef hdma_uart4_rx;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** #ifdef __GNUC__
  59:Core/Src/main.c ****  /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
  60:Core/Src/main.c ****  set to 'Yes') calls __io_putchar() */
  61:Core/Src/main.c ****  #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  62:Core/Src/main.c **** #else
  63:Core/Src/main.c ****  #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  64:Core/Src/main.c **** #endif /* __GNUC__ */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****  * @brief Retargets the C library printf function to the USART.
  68:Core/Src/main.c ****  * @param None
  69:Core/Src/main.c ****  * @retval None
  70:Core/Src/main.c ****  */
  71:Core/Src/main.c **** PUTCHAR_PROTOTYPE 
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****  /* Place your implementation of fputc here */
  74:Core/Src/main.c ****  /* e.g. write a character to the USART */
  75:Core/Src/main.c ****  HAL_UART_Transmit(&huart4, (uint8_t *)&ch, 1, 100);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****  return ch;
  78:Core/Src/main.c **** }
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** /* USER CODE END PV */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  83:Core/Src/main.c **** void SystemClock_Config(void);
  84:Core/Src/main.c **** static void MX_GPIO_Init(void);
  85:Core/Src/main.c **** static void MX_DMA_Init(void);
  86:Core/Src/main.c **** static void MX_TIM2_Init(void);
  87:Core/Src/main.c **** static void MX_TIM3_Init(void);
  88:Core/Src/main.c **** static void MX_UART4_Init(void);
ARM GAS  /tmp/ccgS1raD.s 			page 3


  89:Core/Src/main.c **** static void MX_TIM1_Init(void);
  90:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  91:Core/Src/main.c **** void PWM_generate(float value);
  92:Core/Src/main.c **** float parameter_compute(char i, uint8_t *data);
  93:Core/Src/main.c **** float PID_compute(float ref, float yk, float kp, float ki, float kd);
  94:Core/Src/main.c **** /* USER CODE END PFP */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  97:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /**
 102:Core/Src/main.c ****   * @brief  The application entry point.
 103:Core/Src/main.c ****   * @retval int
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c **** int main(void)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Core/Src/main.c ****   HAL_Init();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Configure the system clock */
 121:Core/Src/main.c ****   SystemClock_Config();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Initialize all configured peripherals */
 128:Core/Src/main.c ****   MX_GPIO_Init();
 129:Core/Src/main.c ****   MX_DMA_Init();
 130:Core/Src/main.c ****   MX_TIM2_Init();
 131:Core/Src/main.c ****   MX_TIM3_Init();
 132:Core/Src/main.c ****   MX_UART4_Init();
 133:Core/Src/main.c ****   MX_TIM1_Init();
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 135:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim1);
 136:Core/Src/main.c **** 	
 137:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_1);
 138:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_2);
 139:Core/Src/main.c **** 	
 140:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 141:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 142:Core/Src/main.c **** 	HAL_UART_Receive_DMA(&huart4, data, 30);
 143:Core/Src/main.c **** 		
 144:Core/Src/main.c **** 	for(char i = 0; i < 30; i++) data[i] += 48;
 145:Core/Src/main.c **** 	char temp = 0;
ARM GAS  /tmp/ccgS1raD.s 			page 4


 146:Core/Src/main.c **** 	double error = 0, error_dot = 0, pre_error = 0;
 147:Core/Src/main.c ****   /* USER CODE END 2 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Infinite loop */
 150:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 151:Core/Src/main.c ****   while (1)
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****     /* USER CODE END WHILE */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 156:Core/Src/main.c **** 		temp++;
 157:Core/Src/main.c **** 		if(temp == 20)
 158:Core/Src/main.c **** 		{
 159:Core/Src/main.c **** 			temp = 0;
 160:Core/Src/main.c **** 			HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_12);
 161:Core/Src/main.c **** 			HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_14);				
 162:Core/Src/main.c **** 		}
 163:Core/Src/main.c **** 		
 164:Core/Src/main.c **** 		count = __HAL_TIM_GET_COUNTER(&htim2);
 165:Core/Src/main.c **** 		position = count/4.;
 166:Core/Src/main.c **** 		
 167:Core/Src/main.c **** 		printf("%lf|%lf|%lf|%lf|%lf\r\n",position,uk,Kp,Ki,Kd);
 168:Core/Src/main.c **** 		HAL_Delay(10);
 169:Core/Src/main.c **** 		
 170:Core/Src/main.c **** 		PWM_generate(uk);
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /* USER CODE END 3 */
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c **** 	if(huart->Instance==huart4.Instance)
 178:Core/Src/main.c **** 	{
 179:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_13);
 180:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_15);		
 181:Core/Src/main.c **** 		//compute value of mode, config and set_point
 182:Core/Src/main.c **** 		mode = parameter_compute(0, data);
 183:Core/Src/main.c **** 		config = parameter_compute(5, data);		
 184:Core/Src/main.c **** 		set_point = parameter_compute(25, data);
 185:Core/Src/main.c **** 	}
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c **** 	if(htim->Instance == htim1.Instance)
 191:Core/Src/main.c **** 	{
 192:Core/Src/main.c **** 		if(config == 000)
 193:Core/Src/main.c **** 		{
 194:Core/Src/main.c **** 			uk = PID_compute(set_point, position, Kp, Ki, Kd);
 195:Core/Src/main.c **** 		}
 196:Core/Src/main.c **** 		else if(config == 111)
 197:Core/Src/main.c **** 		{
 198:Core/Src/main.c **** 			uk = 0;
 199:Core/Src/main.c **** 		}
 200:Core/Src/main.c **** 		else if(config == 001)
 201:Core/Src/main.c **** 		{
 202:Core/Src/main.c **** 			uk = 0;
ARM GAS  /tmp/ccgS1raD.s 			page 5


 203:Core/Src/main.c **** 			count = 0;
 204:Core/Src/main.c **** 			__HAL_TIM_GET_COUNTER(&htim2) = 0;		
 205:Core/Src/main.c **** 		}
 206:Core/Src/main.c **** 	}
 207:Core/Src/main.c **** }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** float parameter_compute(char i, uint8_t *data)
 210:Core/Src/main.c **** {
 211:Core/Src/main.c **** 	float value = (data[0+i]-48)*100 + (data[1+i]-48)*10 + (data[2+i]-48) + (float)(data[3+i]-48)/10 +
 212:Core/Src/main.c **** 	return value;
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** float PID_compute(float ref, float yk, float kp, float ki, float kd)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c **** 	static float uk,uk1,ek,ek1,ek2, Tcs = 0.01;
 218:Core/Src/main.c **** 	ek = ref - yk;
 219:Core/Src/main.c **** 	uk = uk1 + kp*(ek - ek1) + ki*Tcs*(ek + ek1)/2 + kd*(ek - 2*ek1 + ek2)/Tcs;    
 220:Core/Src/main.c **** 	if(uk>999) uk = 999;
 221:Core/Src/main.c **** 	if(uk<-999) uk = -999;
 222:Core/Src/main.c **** 	uk1 = uk;
 223:Core/Src/main.c ****   ek2 = ek1;
 224:Core/Src/main.c ****   ek1 = ek;
 225:Core/Src/main.c **** 	return uk;
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** void PWM_generate(float value)
 229:Core/Src/main.c **** {
 230:Core/Src/main.c **** 		Value_PWM = (int)(value);
 231:Core/Src/main.c **** 		if(Value_PWM > 0)
 232:Core/Src/main.c **** 		{	
 233:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_1,Value_PWM);
 234:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,0);
 235:Core/Src/main.c **** 		}
 236:Core/Src/main.c **** 		else if(Value_PWM < 0)
 237:Core/Src/main.c **** 		{	
 238:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_1,0);
 239:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,-Value_PWM);
 240:Core/Src/main.c **** 		}
 241:Core/Src/main.c **** 		else
 242:Core/Src/main.c **** 		{
 243:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_1,0);
 244:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,0);
 245:Core/Src/main.c **** 		}
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief System Clock Configuration
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** void SystemClock_Config(void)
 254:Core/Src/main.c **** {
 255:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 256:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 259:Core/Src/main.c ****   */
ARM GAS  /tmp/ccgS1raD.s 			page 6


 260:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 261:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 262:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 263:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 273:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 280:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 282:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 284:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 294:Core/Src/main.c ****   * @param None
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** static void MX_TIM1_Init(void)
 298:Core/Src/main.c **** {
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 305:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 310:Core/Src/main.c ****   htim1.Instance = TIM1;
 311:Core/Src/main.c ****   htim1.Init.Prescaler = 42000;
 312:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 313:Core/Src/main.c ****   htim1.Init.Period = 19;
 314:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 315:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 316:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccgS1raD.s 			page 7


 317:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 318:Core/Src/main.c ****   {
 319:Core/Src/main.c ****     Error_Handler();
 320:Core/Src/main.c ****   }
 321:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 322:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 327:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 328:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****     Error_Handler();
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /**
 339:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 340:Core/Src/main.c ****   * @param None
 341:Core/Src/main.c ****   * @retval None
 342:Core/Src/main.c ****   */
 343:Core/Src/main.c **** static void MX_TIM2_Init(void)
 344:Core/Src/main.c **** {
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 351:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 356:Core/Src/main.c ****   htim2.Instance = TIM2;
 357:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 358:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 359:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 360:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 361:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 362:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 363:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 364:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 365:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 366:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 367:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 368:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 369:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 370:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 371:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccgS1raD.s 			page 8


 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 376:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 377:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 378:Core/Src/main.c ****   {
 379:Core/Src/main.c ****     Error_Handler();
 380:Core/Src/main.c ****   }
 381:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** }
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /**
 388:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 389:Core/Src/main.c ****   * @param None
 390:Core/Src/main.c ****   * @retval None
 391:Core/Src/main.c ****   */
 392:Core/Src/main.c **** static void MX_TIM3_Init(void)
 393:Core/Src/main.c **** {
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 400:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 405:Core/Src/main.c ****   htim3.Instance = TIM3;
 406:Core/Src/main.c ****   htim3.Init.Prescaler = 4;
 407:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 408:Core/Src/main.c ****   htim3.Init.Period = 999;
 409:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 410:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 411:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 416:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 417:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 418:Core/Src/main.c ****   {
 419:Core/Src/main.c ****     Error_Handler();
 420:Core/Src/main.c ****   }
 421:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 422:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 423:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 424:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 426:Core/Src/main.c ****   {
 427:Core/Src/main.c ****     Error_Handler();
 428:Core/Src/main.c ****   }
 429:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 430:Core/Src/main.c ****   {
ARM GAS  /tmp/ccgS1raD.s 			page 9


 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 436:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** }
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** /**
 441:Core/Src/main.c ****   * @brief UART4 Initialization Function
 442:Core/Src/main.c ****   * @param None
 443:Core/Src/main.c ****   * @retval None
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c **** static void MX_UART4_Init(void)
 446:Core/Src/main.c **** {
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 455:Core/Src/main.c ****   huart4.Instance = UART4;
 456:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 457:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 458:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 459:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 460:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 461:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 462:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 463:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 464:Core/Src/main.c ****   {
 465:Core/Src/main.c ****     Error_Handler();
 466:Core/Src/main.c ****   }
 467:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** }
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** /**
 474:Core/Src/main.c ****   * Enable DMA controller clock
 475:Core/Src/main.c ****   */
 476:Core/Src/main.c **** static void MX_DMA_Init(void)
 477:Core/Src/main.c **** {
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* DMA controller clock enable */
 480:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* DMA interrupt init */
 483:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
 484:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 485:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** }
ARM GAS  /tmp/ccgS1raD.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** /**
 490:Core/Src/main.c ****   * @brief GPIO Initialization Function
 491:Core/Src/main.c ****   * @param None
 492:Core/Src/main.c ****   * @retval None
 493:Core/Src/main.c ****   */
 494:Core/Src/main.c **** static void MX_GPIO_Init(void)
 495:Core/Src/main.c **** {
  28              		.loc 1 495 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 496:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 496 3 view .LVU1
  42              		.loc 1 496 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 499:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 499 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 499 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 499 3 view .LVU5
  54 0012 1E4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 499 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 499 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 499 3 view .LVU8
 500:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 500 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 500 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 500 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccgS1raD.s 			page 11


  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 500 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00102 		and	r2, r2, #1
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 500 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 500 3 view .LVU14
 501:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  82              		.loc 1 501 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 501 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 501 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00802 		orr	r2, r2, #8
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 501 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00802 		and	r2, r2, #8
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 501 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 501 3 view .LVU20
 502:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  98              		.loc 1 502 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 502 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 502 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00402 		orr	r2, r2, #4
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 502 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00403 		and	r3, r3, #4
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 502 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 502 3 view .LVU26
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 505:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 114              		.loc 1 505 3 view .LVU27
 115 0062 0B4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 4FF47041 		mov	r1, #61440
 118 006a 2846     		mov	r0, r5
 119 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /*Configure GPIO pins : PD12 PD13 PD14 PD15 */
 508:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
ARM GAS  /tmp/ccgS1raD.s 			page 12


 121              		.loc 1 508 3 view .LVU28
 122              		.loc 1 508 23 is_stmt 0 view .LVU29
 123 0070 4FF47043 		mov	r3, #61440
 124 0074 0593     		str	r3, [sp, #20]
 509:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 509 3 is_stmt 1 view .LVU30
 126              		.loc 1 509 24 is_stmt 0 view .LVU31
 127 0076 0123     		movs	r3, #1
 128 0078 0693     		str	r3, [sp, #24]
 510:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 129              		.loc 1 510 3 is_stmt 1 view .LVU32
 130              		.loc 1 510 24 is_stmt 0 view .LVU33
 131 007a 0793     		str	r3, [sp, #28]
 511:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 511 3 is_stmt 1 view .LVU34
 133              		.loc 1 511 25 is_stmt 0 view .LVU35
 134 007c 0894     		str	r4, [sp, #32]
 512:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 135              		.loc 1 512 3 is_stmt 1 view .LVU36
 136 007e 05A9     		add	r1, sp, #20
 137 0080 2846     		mov	r0, r5
 138 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL1:
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** }
 140              		.loc 1 514 1 is_stmt 0 view .LVU37
 141 0086 0BB0     		add	sp, sp, #44
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 12
 144              		@ sp needed
 145 0088 30BD     		pop	{r4, r5, pc}
 146              	.L4:
 147 008a 00BF     		.align	2
 148              	.L3:
 149 008c 00380240 		.word	1073887232
 150 0090 000C0240 		.word	1073875968
 151              		.cfi_endproc
 152              	.LFE146:
 154              		.section	.text.MX_DMA_Init,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	MX_DMA_Init:
 161              	.LFB145:
 477:Core/Src/main.c **** 
 162              		.loc 1 477 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 00B5     		push	{lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 14, -4
 170 0002 83B0     		sub	sp, sp, #12
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccgS1raD.s 			page 13


 480:Core/Src/main.c **** 
 173              		.loc 1 480 3 view .LVU39
 174              	.LBB8:
 480:Core/Src/main.c **** 
 175              		.loc 1 480 3 view .LVU40
 176 0004 0021     		movs	r1, #0
 177 0006 0191     		str	r1, [sp, #4]
 480:Core/Src/main.c **** 
 178              		.loc 1 480 3 view .LVU41
 179 0008 094B     		ldr	r3, .L7
 180 000a 1A6B     		ldr	r2, [r3, #48]
 181 000c 42F40012 		orr	r2, r2, #2097152
 182 0010 1A63     		str	r2, [r3, #48]
 480:Core/Src/main.c **** 
 183              		.loc 1 480 3 view .LVU42
 184 0012 1B6B     		ldr	r3, [r3, #48]
 185 0014 03F40013 		and	r3, r3, #2097152
 186 0018 0193     		str	r3, [sp, #4]
 480:Core/Src/main.c **** 
 187              		.loc 1 480 3 view .LVU43
 188 001a 019B     		ldr	r3, [sp, #4]
 189              	.LBE8:
 480:Core/Src/main.c **** 
 190              		.loc 1 480 3 view .LVU44
 484:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 191              		.loc 1 484 3 view .LVU45
 192 001c 0A46     		mov	r2, r1
 193 001e 0D20     		movs	r0, #13
 194 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 195              	.LVL2:
 485:Core/Src/main.c **** 
 196              		.loc 1 485 3 view .LVU46
 197 0024 0D20     		movs	r0, #13
 198 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 199              	.LVL3:
 487:Core/Src/main.c **** 
 200              		.loc 1 487 1 is_stmt 0 view .LVU47
 201 002a 03B0     		add	sp, sp, #12
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 4
 204              		@ sp needed
 205 002c 5DF804FB 		ldr	pc, [sp], #4
 206              	.L8:
 207              		.align	2
 208              	.L7:
 209 0030 00380240 		.word	1073887232
 210              		.cfi_endproc
 211              	.LFE145:
 213              		.section	.text.__io_putchar,"ax",%progbits
 214              		.align	1
 215              		.global	__io_putchar
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 220              	__io_putchar:
 221              	.LVL4:
 222              	.LFB133:
ARM GAS  /tmp/ccgS1raD.s 			page 14


  72:Core/Src/main.c ****  /* Place your implementation of fputc here */
 223              		.loc 1 72 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Src/main.c ****  /* Place your implementation of fputc here */
 227              		.loc 1 72 1 is_stmt 0 view .LVU49
 228 0000 00B5     		push	{lr}
 229              	.LCFI6:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 14, -4
 232 0002 83B0     		sub	sp, sp, #12
 233              	.LCFI7:
 234              		.cfi_def_cfa_offset 16
 235 0004 0190     		str	r0, [sp, #4]
  75:Core/Src/main.c **** 
 236              		.loc 1 75 2 is_stmt 1 view .LVU50
 237 0006 6423     		movs	r3, #100
 238 0008 0122     		movs	r2, #1
 239 000a 01A9     		add	r1, sp, #4
 240 000c 0348     		ldr	r0, .L11
 241              	.LVL5:
  75:Core/Src/main.c **** 
 242              		.loc 1 75 2 is_stmt 0 view .LVU51
 243 000e FFF7FEFF 		bl	HAL_UART_Transmit
 244              	.LVL6:
  77:Core/Src/main.c **** }
 245              		.loc 1 77 2 is_stmt 1 view .LVU52
  78:Core/Src/main.c **** /* USER CODE END PFP */
 246              		.loc 1 78 1 is_stmt 0 view .LVU53
 247 0012 0198     		ldr	r0, [sp, #4]
 248 0014 03B0     		add	sp, sp, #12
 249              	.LCFI8:
 250              		.cfi_def_cfa_offset 4
 251              		@ sp needed
 252 0016 5DF804FB 		ldr	pc, [sp], #4
 253              	.L12:
 254 001a 00BF     		.align	2
 255              	.L11:
 256 001c 00000000 		.word	.LANCHOR0
 257              		.cfi_endproc
 258              	.LFE133:
 260              		.section	.text.parameter_compute,"ax",%progbits
 261              		.align	1
 262              		.global	parameter_compute
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	parameter_compute:
 268              	.LVL7:
 269              	.LFB137:
 210:Core/Src/main.c **** 	float value = (data[0+i]-48)*100 + (data[1+i]-48)*10 + (data[2+i]-48) + (float)(data[3+i]-48)/10 +
 270              		.loc 1 210 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
ARM GAS  /tmp/ccgS1raD.s 			page 15


 211:Core/Src/main.c **** 	return value;
 275              		.loc 1 211 2 view .LVU55
 211:Core/Src/main.c **** 	return value;
 276              		.loc 1 211 21 is_stmt 0 view .LVU56
 277 0000 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 211:Core/Src/main.c **** 	return value;
 278              		.loc 1 211 26 view .LVU57
 279 0002 A3F13002 		sub	r2, r3, #48
 211:Core/Src/main.c **** 	return value;
 280              		.loc 1 211 44 view .LVU58
 281 0006 431C     		adds	r3, r0, #1
 211:Core/Src/main.c **** 	return value;
 282              		.loc 1 211 42 view .LVU59
 283 0008 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 211:Core/Src/main.c **** 	return value;
 284              		.loc 1 211 47 view .LVU60
 285 000a 303B     		subs	r3, r3, #48
 211:Core/Src/main.c **** 	return value;
 286              		.loc 1 211 51 view .LVU61
 287 000c 03EB8303 		add	r3, r3, r3, lsl #2
 288 0010 5B00     		lsls	r3, r3, #1
 211:Core/Src/main.c **** 	return value;
 289              		.loc 1 211 35 view .LVU62
 290 0012 4FF0640C 		mov	ip, #100
 291 0016 0CFB0233 		mla	r3, ip, r2, r3
 211:Core/Src/main.c **** 	return value;
 292              		.loc 1 211 64 view .LVU63
 293 001a 821C     		adds	r2, r0, #2
 211:Core/Src/main.c **** 	return value;
 294              		.loc 1 211 62 view .LVU64
 295 001c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 211:Core/Src/main.c **** 	return value;
 296              		.loc 1 211 67 view .LVU65
 297 001e 303A     		subs	r2, r2, #48
 211:Core/Src/main.c **** 	return value;
 298              		.loc 1 211 55 view .LVU66
 299 0020 1344     		add	r3, r3, r2
 300 0022 07EE903A 		vmov	s15, r3	@ int
 211:Core/Src/main.c **** 	return value;
 301              		.loc 1 211 88 view .LVU67
 302 0026 C31C     		adds	r3, r0, #3
 211:Core/Src/main.c **** 	return value;
 303              		.loc 1 211 86 view .LVU68
 304 0028 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 211:Core/Src/main.c **** 	return value;
 305              		.loc 1 211 91 view .LVU69
 306 002a 303B     		subs	r3, r3, #48
 211:Core/Src/main.c **** 	return value;
 307              		.loc 1 211 74 view .LVU70
 308 002c 07EE103A 		vmov	s14, r3	@ int
 309 0030 B8EEC77A 		vcvt.f32.s32	s14, s14
 211:Core/Src/main.c **** 	return value;
 310              		.loc 1 211 95 view .LVU71
 311 0034 F2EE046A 		vmov.f32	s13, #1.0e+1
 312 0038 87EE260A 		vdiv.f32	s0, s14, s13
 211:Core/Src/main.c **** 	return value;
 313              		.loc 1 211 72 view .LVU72
ARM GAS  /tmp/ccgS1raD.s 			page 16


 314 003c F8EEE77A 		vcvt.f32.s32	s15, s15
 315 0040 77EE807A 		vadd.f32	s15, s15, s0
 211:Core/Src/main.c **** 	return value;
 316              		.loc 1 211 115 view .LVU73
 317 0044 0430     		adds	r0, r0, #4
 318              	.LVL8:
 211:Core/Src/main.c **** 	return value;
 319              		.loc 1 211 113 view .LVU74
 320 0046 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 211:Core/Src/main.c **** 	return value;
 321              		.loc 1 211 118 view .LVU75
 322 0048 303B     		subs	r3, r3, #48
 211:Core/Src/main.c **** 	return value;
 323              		.loc 1 211 101 view .LVU76
 324 004a 07EE103A 		vmov	s14, r3	@ int
 325 004e B8EEC77A 		vcvt.f32.s32	s14, s14
 211:Core/Src/main.c **** 	return value;
 326              		.loc 1 211 122 view .LVU77
 327 0052 DFED036A 		vldr.32	s13, .L14
 328 0056 87EE260A 		vdiv.f32	s0, s14, s13
 329              	.LVL9:
 212:Core/Src/main.c **** }
 330              		.loc 1 212 2 is_stmt 1 view .LVU78
 213:Core/Src/main.c **** 
 331              		.loc 1 213 1 is_stmt 0 view .LVU79
 332 005a 37EE800A 		vadd.f32	s0, s15, s0
 333              	.LVL10:
 213:Core/Src/main.c **** 
 334              		.loc 1 213 1 view .LVU80
 335 005e 7047     		bx	lr
 336              	.L15:
 337              		.align	2
 338              	.L14:
 339 0060 0000C842 		.word	1120403456
 340              		.cfi_endproc
 341              	.LFE137:
 343              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 344              		.align	1
 345              		.global	HAL_UART_RxCpltCallback
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	HAL_UART_RxCpltCallback:
 351              	.LVL11:
 352              	.LFB135:
 176:Core/Src/main.c **** 	if(huart->Instance==huart4.Instance)
 353              		.loc 1 176 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 177:Core/Src/main.c **** 	{
 357              		.loc 1 177 2 view .LVU82
 177:Core/Src/main.c **** 	{
 358              		.loc 1 177 10 is_stmt 0 view .LVU83
 359 0000 0268     		ldr	r2, [r0]
 177:Core/Src/main.c **** 	{
 360              		.loc 1 177 28 view .LVU84
ARM GAS  /tmp/ccgS1raD.s 			page 17


 361 0002 144B     		ldr	r3, .L23
 362 0004 1B68     		ldr	r3, [r3]
 177:Core/Src/main.c **** 	{
 363              		.loc 1 177 4 view .LVU85
 364 0006 9A42     		cmp	r2, r3
 365 0008 00D0     		beq	.L22
 366 000a 7047     		bx	lr
 367              	.L22:
 176:Core/Src/main.c **** 	if(huart->Instance==huart4.Instance)
 368              		.loc 1 176 1 view .LVU86
 369 000c 10B5     		push	{r4, lr}
 370              	.LCFI9:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 179:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_15);		
 374              		.loc 1 179 3 is_stmt 1 view .LVU87
 375 000e 124C     		ldr	r4, .L23+4
 376 0010 4FF40051 		mov	r1, #8192
 377 0014 2046     		mov	r0, r4
 378              	.LVL12:
 179:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_15);		
 379              		.loc 1 179 3 is_stmt 0 view .LVU88
 380 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 381              	.LVL13:
 180:Core/Src/main.c **** 		//compute value of mode, config and set_point
 382              		.loc 1 180 3 is_stmt 1 view .LVU89
 383 001a 4FF40041 		mov	r1, #32768
 384 001e 2046     		mov	r0, r4
 385 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 386              	.LVL14:
 182:Core/Src/main.c **** 		config = parameter_compute(5, data);		
 387              		.loc 1 182 3 view .LVU90
 182:Core/Src/main.c **** 		config = parameter_compute(5, data);		
 388              		.loc 1 182 10 is_stmt 0 view .LVU91
 389 0024 0D4C     		ldr	r4, .L23+8
 390 0026 2146     		mov	r1, r4
 391 0028 0020     		movs	r0, #0
 392 002a FFF7FEFF 		bl	parameter_compute
 393              	.LVL15:
 182:Core/Src/main.c **** 		config = parameter_compute(5, data);		
 394              		.loc 1 182 8 view .LVU92
 395 002e 0C4B     		ldr	r3, .L23+12
 396 0030 83ED000A 		vstr.32	s0, [r3]
 183:Core/Src/main.c **** 		set_point = parameter_compute(25, data);
 397              		.loc 1 183 3 is_stmt 1 view .LVU93
 183:Core/Src/main.c **** 		set_point = parameter_compute(25, data);
 398              		.loc 1 183 12 is_stmt 0 view .LVU94
 399 0034 2146     		mov	r1, r4
 400 0036 0520     		movs	r0, #5
 401 0038 FFF7FEFF 		bl	parameter_compute
 402              	.LVL16:
 183:Core/Src/main.c **** 		set_point = parameter_compute(25, data);
 403              		.loc 1 183 10 view .LVU95
 404 003c 094B     		ldr	r3, .L23+16
 405 003e 83ED000A 		vstr.32	s0, [r3]
 184:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccgS1raD.s 			page 18


 406              		.loc 1 184 3 is_stmt 1 view .LVU96
 184:Core/Src/main.c **** 	}
 407              		.loc 1 184 15 is_stmt 0 view .LVU97
 408 0042 2146     		mov	r1, r4
 409 0044 1920     		movs	r0, #25
 410 0046 FFF7FEFF 		bl	parameter_compute
 411              	.LVL17:
 184:Core/Src/main.c **** 	}
 412              		.loc 1 184 13 view .LVU98
 413 004a 074B     		ldr	r3, .L23+20
 414 004c 83ED000A 		vstr.32	s0, [r3]
 186:Core/Src/main.c **** 
 415              		.loc 1 186 1 view .LVU99
 416 0050 10BD     		pop	{r4, pc}
 417              	.L24:
 418 0052 00BF     		.align	2
 419              	.L23:
 420 0054 00000000 		.word	.LANCHOR0
 421 0058 000C0240 		.word	1073875968
 422 005c 00000000 		.word	.LANCHOR1
 423 0060 00000000 		.word	.LANCHOR2
 424 0064 00000000 		.word	.LANCHOR3
 425 0068 00000000 		.word	.LANCHOR4
 426              		.cfi_endproc
 427              	.LFE135:
 429              		.section	.text.PID_compute,"ax",%progbits
 430              		.align	1
 431              		.global	PID_compute
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 436              	PID_compute:
 437              	.LVL18:
 438              	.LFB138:
 216:Core/Src/main.c **** 	static float uk,uk1,ek,ek1,ek2, Tcs = 0.01;
 439              		.loc 1 216 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 217:Core/Src/main.c **** 	ek = ref - yk;
 444              		.loc 1 217 2 view .LVU101
 218:Core/Src/main.c **** 	uk = uk1 + kp*(ek - ek1) + ki*Tcs*(ek + ek1)/2 + kd*(ek - 2*ek1 + ek2)/Tcs;    
 445              		.loc 1 218 2 view .LVU102
 218:Core/Src/main.c **** 	uk = uk1 + kp*(ek - ek1) + ki*Tcs*(ek + ek1)/2 + kd*(ek - 2*ek1 + ek2)/Tcs;    
 446              		.loc 1 218 11 is_stmt 0 view .LVU103
 447 0000 70EE600A 		vsub.f32	s1, s0, s1
 448              	.LVL19:
 218:Core/Src/main.c **** 	uk = uk1 + kp*(ek - ek1) + ki*Tcs*(ek + ek1)/2 + kd*(ek - 2*ek1 + ek2)/Tcs;    
 449              		.loc 1 218 5 view .LVU104
 450 0004 284B     		ldr	r3, .L32
 451 0006 C3ED000A 		vstr.32	s1, [r3]
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 452              		.loc 1 219 2 is_stmt 1 view .LVU105
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 453              		.loc 1 219 20 is_stmt 0 view .LVU106
 454 000a 284B     		ldr	r3, .L32+4
ARM GAS  /tmp/ccgS1raD.s 			page 19


 455 000c D3ED006A 		vldr.32	s13, [r3]
 456 0010 70EEE67A 		vsub.f32	s15, s1, s13
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 457              		.loc 1 219 15 view .LVU107
 458 0014 67EE817A 		vmul.f32	s15, s15, s2
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 459              		.loc 1 219 11 view .LVU108
 460 0018 254B     		ldr	r3, .L32+8
 461 001a 93ED001A 		vldr.32	s2, [r3]
 462              	.LVL20:
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 463              		.loc 1 219 11 view .LVU109
 464 001e 77EE817A 		vadd.f32	s15, s15, s2
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 465              		.loc 1 219 31 view .LVU110
 466 0022 9FED246A 		vldr.32	s12, .L32+12
 467 0026 61EE861A 		vmul.f32	s3, s3, s12
 468              	.LVL21:
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 469              		.loc 1 219 40 view .LVU111
 470 002a 30EEA67A 		vadd.f32	s14, s1, s13
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 471              		.loc 1 219 35 view .LVU112
 472 002e 61EE871A 		vmul.f32	s3, s3, s14
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 473              		.loc 1 219 46 view .LVU113
 474 0032 B6EE007A 		vmov.f32	s14, #5.0e-1
 475 0036 61EE871A 		vmul.f32	s3, s3, s14
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 476              		.loc 1 219 27 view .LVU114
 477 003a 77EEA17A 		vadd.f32	s15, s15, s3
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 478              		.loc 1 219 61 view .LVU115
 479 003e 36EEA67A 		vadd.f32	s14, s13, s13
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 480              		.loc 1 219 58 view .LVU116
 481 0042 30EEC77A 		vsub.f32	s14, s1, s14
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 482              		.loc 1 219 66 view .LVU117
 483 0046 1C4B     		ldr	r3, .L32+16
 484 0048 D3ED005A 		vldr.32	s11, [r3]
 485 004c 37EE257A 		vadd.f32	s14, s14, s11
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 486              		.loc 1 219 53 view .LVU118
 487 0050 27EE027A 		vmul.f32	s14, s14, s4
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 488              		.loc 1 219 72 view .LVU119
 489 0054 C7EE065A 		vdiv.f32	s11, s14, s12
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 490              		.loc 1 219 49 view .LVU120
 491 0058 77EEA57A 		vadd.f32	s15, s15, s11
 219:Core/Src/main.c **** 	if(uk>999) uk = 999;
 492              		.loc 1 219 5 view .LVU121
 493 005c 174B     		ldr	r3, .L32+20
 494 005e C3ED007A 		vstr.32	s15, [r3]
 220:Core/Src/main.c **** 	if(uk<-999) uk = -999;
 495              		.loc 1 220 2 is_stmt 1 view .LVU122
ARM GAS  /tmp/ccgS1raD.s 			page 20


 220:Core/Src/main.c **** 	if(uk<-999) uk = -999;
 496              		.loc 1 220 4 is_stmt 0 view .LVU123
 497 0062 9FED177A 		vldr.32	s14, .L32+24
 498 0066 F4EEC77A 		vcmpe.f32	s15, s14
 499 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 500 006e 01DD     		ble	.L26
 220:Core/Src/main.c **** 	if(uk<-999) uk = -999;
 501              		.loc 1 220 13 is_stmt 1 discriminator 1 view .LVU124
 220:Core/Src/main.c **** 	if(uk<-999) uk = -999;
 502              		.loc 1 220 16 is_stmt 0 discriminator 1 view .LVU125
 503 0070 83ED007A 		vstr.32	s14, [r3]
 504              	.L26:
 221:Core/Src/main.c **** 	uk1 = uk;
 505              		.loc 1 221 2 is_stmt 1 view .LVU126
 221:Core/Src/main.c **** 	uk1 = uk;
 506              		.loc 1 221 7 is_stmt 0 view .LVU127
 507 0074 114B     		ldr	r3, .L32+20
 508 0076 93ED007A 		vldr.32	s14, [r3]
 221:Core/Src/main.c **** 	uk1 = uk;
 509              		.loc 1 221 4 view .LVU128
 510 007a DFED127A 		vldr.32	s15, .L32+28
 511 007e B4EEE77A 		vcmpe.f32	s14, s15
 512 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 513 0086 01D5     		bpl	.L28
 221:Core/Src/main.c **** 	uk1 = uk;
 514              		.loc 1 221 14 is_stmt 1 discriminator 1 view .LVU129
 221:Core/Src/main.c **** 	uk1 = uk;
 515              		.loc 1 221 17 is_stmt 0 discriminator 1 view .LVU130
 516 0088 C3ED007A 		vstr.32	s15, [r3]
 517              	.L28:
 222:Core/Src/main.c ****   ek2 = ek1;
 518              		.loc 1 222 2 is_stmt 1 view .LVU131
 222:Core/Src/main.c ****   ek2 = ek1;
 519              		.loc 1 222 6 is_stmt 0 view .LVU132
 520 008c 0B4B     		ldr	r3, .L32+20
 521 008e 93ED000A 		vldr.32	s0, [r3]
 522              	.LVL22:
 222:Core/Src/main.c ****   ek2 = ek1;
 523              		.loc 1 222 6 view .LVU133
 524 0092 074B     		ldr	r3, .L32+8
 525 0094 83ED000A 		vstr.32	s0, [r3]
 223:Core/Src/main.c ****   ek1 = ek;
 526              		.loc 1 223 3 is_stmt 1 view .LVU134
 223:Core/Src/main.c ****   ek1 = ek;
 527              		.loc 1 223 7 is_stmt 0 view .LVU135
 528 0098 074B     		ldr	r3, .L32+16
 529 009a C3ED006A 		vstr.32	s13, [r3]
 224:Core/Src/main.c **** 	return uk;
 530              		.loc 1 224 3 is_stmt 1 view .LVU136
 224:Core/Src/main.c **** 	return uk;
 531              		.loc 1 224 7 is_stmt 0 view .LVU137
 532 009e 034B     		ldr	r3, .L32+4
 533 00a0 C3ED000A 		vstr.32	s1, [r3]
 225:Core/Src/main.c **** }
 534              		.loc 1 225 2 is_stmt 1 view .LVU138
 226:Core/Src/main.c **** 
 535              		.loc 1 226 1 is_stmt 0 view .LVU139
ARM GAS  /tmp/ccgS1raD.s 			page 21


 536 00a4 7047     		bx	lr
 537              	.L33:
 538 00a6 00BF     		.align	2
 539              	.L32:
 540 00a8 00000000 		.word	.LANCHOR5
 541 00ac 00000000 		.word	.LANCHOR6
 542 00b0 00000000 		.word	.LANCHOR7
 543 00b4 0AD7233C 		.word	1008981770
 544 00b8 00000000 		.word	.LANCHOR8
 545 00bc 00000000 		.word	.LANCHOR9
 546 00c0 00C07944 		.word	1148829696
 547 00c4 00C079C4 		.word	-998653952
 548              		.cfi_endproc
 549              	.LFE138:
 551              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 552              		.align	1
 553              		.global	HAL_TIM_PeriodElapsedCallback
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	HAL_TIM_PeriodElapsedCallback:
 559              	.LVL23:
 560              	.LFB136:
 189:Core/Src/main.c **** 	if(htim->Instance == htim1.Instance)
 561              		.loc 1 189 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 189:Core/Src/main.c **** 	if(htim->Instance == htim1.Instance)
 565              		.loc 1 189 1 is_stmt 0 view .LVU141
 566 0000 08B5     		push	{r3, lr}
 567              	.LCFI10:
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 3, -8
 570              		.cfi_offset 14, -4
 190:Core/Src/main.c **** 	{
 571              		.loc 1 190 2 is_stmt 1 view .LVU142
 190:Core/Src/main.c **** 	{
 572              		.loc 1 190 9 is_stmt 0 view .LVU143
 573 0002 0268     		ldr	r2, [r0]
 190:Core/Src/main.c **** 	{
 574              		.loc 1 190 28 view .LVU144
 575 0004 1E4B     		ldr	r3, .L41
 576 0006 1B68     		ldr	r3, [r3]
 190:Core/Src/main.c **** 	{
 577              		.loc 1 190 4 view .LVU145
 578 0008 9A42     		cmp	r2, r3
 579 000a 00D0     		beq	.L39
 580              	.LVL24:
 581              	.L34:
 207:Core/Src/main.c **** 
 582              		.loc 1 207 1 view .LVU146
 583 000c 08BD     		pop	{r3, pc}
 584              	.LVL25:
 585              	.L39:
 192:Core/Src/main.c **** 		{
 586              		.loc 1 192 3 is_stmt 1 view .LVU147
ARM GAS  /tmp/ccgS1raD.s 			page 22


 192:Core/Src/main.c **** 		{
 587              		.loc 1 192 13 is_stmt 0 view .LVU148
 588 000e 1D4B     		ldr	r3, .L41+4
 589 0010 D3ED007A 		vldr.32	s15, [r3]
 192:Core/Src/main.c **** 		{
 590              		.loc 1 192 5 view .LVU149
 591 0014 F5EE407A 		vcmp.f32	s15, #0
 592 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 593 001c 0AD0     		beq	.L40
 196:Core/Src/main.c **** 		{
 594              		.loc 1 196 8 is_stmt 1 view .LVU150
 196:Core/Src/main.c **** 		{
 595              		.loc 1 196 10 is_stmt 0 view .LVU151
 596 001e 9FED1A7A 		vldr.32	s14, .L41+8
 597 0022 F4EE477A 		vcmp.f32	s15, s14
 598 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 599 002a 18D1     		bne	.L37
 198:Core/Src/main.c **** 		}
 600              		.loc 1 198 4 is_stmt 1 view .LVU152
 198:Core/Src/main.c **** 		}
 601              		.loc 1 198 7 is_stmt 0 view .LVU153
 602 002c 174B     		ldr	r3, .L41+12
 603 002e 0022     		movs	r2, #0
 604 0030 1A60     		str	r2, [r3]	@ float
 605 0032 EBE7     		b	.L34
 606              	.L40:
 194:Core/Src/main.c **** 		}
 607              		.loc 1 194 4 is_stmt 1 view .LVU154
 194:Core/Src/main.c **** 		}
 608              		.loc 1 194 9 is_stmt 0 view .LVU155
 609 0034 164B     		ldr	r3, .L41+16
 610 0036 D3ED000A 		vldr.32	s1, [r3]
 611 003a 164B     		ldr	r3, .L41+20
 612 003c 93ED002A 		vldr.32	s4, [r3]
 613 0040 154B     		ldr	r3, .L41+24
 614 0042 D3ED001A 		vldr.32	s3, [r3]
 615 0046 154B     		ldr	r3, .L41+28
 616 0048 93ED001A 		vldr.32	s2, [r3]
 617 004c 144B     		ldr	r3, .L41+32
 618 004e 93ED000A 		vldr.32	s0, [r3]
 619 0052 FFF7FEFF 		bl	PID_compute
 620              	.LVL26:
 194:Core/Src/main.c **** 		}
 621              		.loc 1 194 7 view .LVU156
 622 0056 0D4B     		ldr	r3, .L41+12
 623 0058 83ED000A 		vstr.32	s0, [r3]
 624 005c D6E7     		b	.L34
 625              	.LVL27:
 626              	.L37:
 200:Core/Src/main.c **** 		{
 627              		.loc 1 200 8 is_stmt 1 view .LVU157
 200:Core/Src/main.c **** 		{
 628              		.loc 1 200 10 is_stmt 0 view .LVU158
 629 005e B7EE007A 		vmov.f32	s14, #1.0e+0
 630 0062 F4EE477A 		vcmp.f32	s15, s14
 631 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 632 006a CFD1     		bne	.L34
ARM GAS  /tmp/ccgS1raD.s 			page 23


 202:Core/Src/main.c **** 			count = 0;
 633              		.loc 1 202 4 is_stmt 1 view .LVU159
 202:Core/Src/main.c **** 			count = 0;
 634              		.loc 1 202 7 is_stmt 0 view .LVU160
 635 006c 074B     		ldr	r3, .L41+12
 636 006e 0022     		movs	r2, #0
 637 0070 1A60     		str	r2, [r3]	@ float
 203:Core/Src/main.c **** 			__HAL_TIM_GET_COUNTER(&htim2) = 0;		
 638              		.loc 1 203 4 is_stmt 1 view .LVU161
 203:Core/Src/main.c **** 			__HAL_TIM_GET_COUNTER(&htim2) = 0;		
 639              		.loc 1 203 10 is_stmt 0 view .LVU162
 640 0072 0023     		movs	r3, #0
 641 0074 0B4A     		ldr	r2, .L41+36
 642 0076 1380     		strh	r3, [r2]	@ movhi
 204:Core/Src/main.c **** 		}
 643              		.loc 1 204 4 is_stmt 1 view .LVU163
 644 0078 0B4A     		ldr	r2, .L41+40
 645 007a 1268     		ldr	r2, [r2]
 204:Core/Src/main.c **** 		}
 646              		.loc 1 204 34 is_stmt 0 view .LVU164
 647 007c 5362     		str	r3, [r2, #36]
 207:Core/Src/main.c **** 
 648              		.loc 1 207 1 view .LVU165
 649 007e C5E7     		b	.L34
 650              	.L42:
 651              		.align	2
 652              	.L41:
 653 0080 00000000 		.word	.LANCHOR10
 654 0084 00000000 		.word	.LANCHOR3
 655 0088 0000DE42 		.word	1121845248
 656 008c 00000000 		.word	.LANCHOR15
 657 0090 00000000 		.word	.LANCHOR11
 658 0094 00000000 		.word	.LANCHOR12
 659 0098 00000000 		.word	.LANCHOR13
 660 009c 00000000 		.word	.LANCHOR14
 661 00a0 00000000 		.word	.LANCHOR4
 662 00a4 00000000 		.word	.LANCHOR16
 663 00a8 00000000 		.word	.LANCHOR17
 664              		.cfi_endproc
 665              	.LFE136:
 667              		.section	.text.PWM_generate,"ax",%progbits
 668              		.align	1
 669              		.global	PWM_generate
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	PWM_generate:
 675              	.LVL28:
 676              	.LFB139:
 229:Core/Src/main.c **** 		Value_PWM = (int)(value);
 677              		.loc 1 229 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 230:Core/Src/main.c **** 		if(Value_PWM > 0)
 682              		.loc 1 230 3 view .LVU167
ARM GAS  /tmp/ccgS1raD.s 			page 24


 230:Core/Src/main.c **** 		if(Value_PWM > 0)
 683              		.loc 1 230 15 is_stmt 0 view .LVU168
 684 0000 FDEEC07A 		vcvt.s32.f32	s15, s0
 685 0004 17EE903A 		vmov	r3, s15	@ int
 230:Core/Src/main.c **** 		if(Value_PWM > 0)
 686              		.loc 1 230 13 view .LVU169
 687 0008 0D4A     		ldr	r2, .L48
 688 000a C2ED007A 		vstr.32	s15, [r2]	@ int
 231:Core/Src/main.c **** 		{	
 689              		.loc 1 231 3 is_stmt 1 view .LVU170
 231:Core/Src/main.c **** 		{	
 690              		.loc 1 231 5 is_stmt 0 view .LVU171
 691 000e 002B     		cmp	r3, #0
 692 0010 06DD     		ble	.L44
 233:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,0);
 693              		.loc 1 233 4 is_stmt 1 view .LVU172
 694 0012 0C4A     		ldr	r2, .L48+4
 695 0014 1268     		ldr	r2, [r2]
 696 0016 C2ED0D7A 		vstr.32	s15, [r2, #52]	@ int
 234:Core/Src/main.c **** 		}
 697              		.loc 1 234 4 view .LVU173
 698 001a 0023     		movs	r3, #0
 699 001c 9363     		str	r3, [r2, #56]
 700 001e 7047     		bx	lr
 701              	.L44:
 236:Core/Src/main.c **** 		{	
 702              		.loc 1 236 8 view .LVU174
 236:Core/Src/main.c **** 		{	
 703              		.loc 1 236 10 is_stmt 0 view .LVU175
 704 0020 002B     		cmp	r3, #0
 705 0022 05DB     		blt	.L47
 243:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,0);
 706              		.loc 1 243 4 is_stmt 1 view .LVU176
 707 0024 074B     		ldr	r3, .L48+4
 708 0026 1B68     		ldr	r3, [r3]
 709 0028 0022     		movs	r2, #0
 710 002a 5A63     		str	r2, [r3, #52]
 244:Core/Src/main.c **** 		}
 711              		.loc 1 244 4 view .LVU177
 712 002c 9A63     		str	r2, [r3, #56]
 246:Core/Src/main.c **** 
 713              		.loc 1 246 1 is_stmt 0 view .LVU178
 714 002e 7047     		bx	lr
 715              	.L47:
 238:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,-Value_PWM);
 716              		.loc 1 238 4 is_stmt 1 view .LVU179
 717 0030 044A     		ldr	r2, .L48+4
 718 0032 1268     		ldr	r2, [r2]
 719 0034 0021     		movs	r1, #0
 720 0036 5163     		str	r1, [r2, #52]
 239:Core/Src/main.c **** 		}
 721              		.loc 1 239 4 view .LVU180
 722 0038 5B42     		rsbs	r3, r3, #0
 723 003a 9363     		str	r3, [r2, #56]
 724 003c 7047     		bx	lr
 725              	.L49:
 726 003e 00BF     		.align	2
ARM GAS  /tmp/ccgS1raD.s 			page 25


 727              	.L48:
 728 0040 00000000 		.word	.LANCHOR18
 729 0044 00000000 		.word	.LANCHOR19
 730              		.cfi_endproc
 731              	.LFE139:
 733              		.section	.text.Error_Handler,"ax",%progbits
 734              		.align	1
 735              		.global	Error_Handler
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	Error_Handler:
 741              	.LFB147:
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** /* USER CODE END 4 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** /**
 521:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 522:Core/Src/main.c ****   * @retval None
 523:Core/Src/main.c ****   */
 524:Core/Src/main.c **** void Error_Handler(void)
 525:Core/Src/main.c **** {
 742              		.loc 1 525 1 view -0
 743              		.cfi_startproc
 744              		@ Volatile: function does not return.
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 526:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 527:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 528:Core/Src/main.c ****   __disable_irq();
 748              		.loc 1 528 3 view .LVU182
 749              	.LBB9:
 750              	.LBI9:
 751              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccgS1raD.s 			page 26


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccgS1raD.s 			page 27


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccgS1raD.s 			page 28


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 752              		.loc 2 140 27 view .LVU183
 753              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 754              		.loc 2 142 3 view .LVU184
 755              		.syntax unified
 756              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 757 0000 72B6     		cpsid i
 758              	@ 0 "" 2
 759              		.thumb
 760              		.syntax unified
 761              	.L51:
 762              	.LBE10:
 763              	.LBE9:
 529:Core/Src/main.c ****   while (1)
 764              		.loc 1 529 3 discriminator 1 view .LVU185
 530:Core/Src/main.c ****   {
 531:Core/Src/main.c ****   }
 765              		.loc 1 531 3 discriminator 1 view .LVU186
 529:Core/Src/main.c ****   while (1)
 766              		.loc 1 529 9 discriminator 1 view .LVU187
 767 0002 FEE7     		b	.L51
 768              		.cfi_endproc
 769              	.LFE147:
 771              		.section	.text.MX_TIM2_Init,"ax",%progbits
 772              		.align	1
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 777              	MX_TIM2_Init:
 778              	.LFB142:
 344:Core/Src/main.c **** 
 779              		.loc 1 344 1 view -0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 48
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783 0000 00B5     		push	{lr}
 784              	.LCFI11:
 785              		.cfi_def_cfa_offset 4
 786              		.cfi_offset 14, -4
 787 0002 8DB0     		sub	sp, sp, #52
 788              	.LCFI12:
 789              		.cfi_def_cfa_offset 56
 350:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 790              		.loc 1 350 3 view .LVU189
 350:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 791              		.loc 1 350 27 is_stmt 0 view .LVU190
 792 0004 2422     		movs	r2, #36
 793 0006 0021     		movs	r1, #0
 794 0008 03A8     		add	r0, sp, #12
 795 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccgS1raD.s 			page 29


 796              	.LVL29:
 351:Core/Src/main.c **** 
 797              		.loc 1 351 3 is_stmt 1 view .LVU191
 351:Core/Src/main.c **** 
 798              		.loc 1 351 27 is_stmt 0 view .LVU192
 799 000e 0023     		movs	r3, #0
 800 0010 0193     		str	r3, [sp, #4]
 801 0012 0293     		str	r3, [sp, #8]
 356:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 802              		.loc 1 356 3 is_stmt 1 view .LVU193
 356:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 803              		.loc 1 356 18 is_stmt 0 view .LVU194
 804 0014 1148     		ldr	r0, .L58
 805 0016 4FF08042 		mov	r2, #1073741824
 806 001a 0260     		str	r2, [r0]
 357:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 807              		.loc 1 357 3 is_stmt 1 view .LVU195
 357:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 808              		.loc 1 357 24 is_stmt 0 view .LVU196
 809 001c 4360     		str	r3, [r0, #4]
 358:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 810              		.loc 1 358 3 is_stmt 1 view .LVU197
 358:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 811              		.loc 1 358 26 is_stmt 0 view .LVU198
 812 001e 8360     		str	r3, [r0, #8]
 359:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 813              		.loc 1 359 3 is_stmt 1 view .LVU199
 359:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 814              		.loc 1 359 21 is_stmt 0 view .LVU200
 815 0020 4FF0FF32 		mov	r2, #-1
 816 0024 C260     		str	r2, [r0, #12]
 360:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 817              		.loc 1 360 3 is_stmt 1 view .LVU201
 360:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 818              		.loc 1 360 28 is_stmt 0 view .LVU202
 819 0026 0361     		str	r3, [r0, #16]
 361:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 820              		.loc 1 361 3 is_stmt 1 view .LVU203
 361:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 821              		.loc 1 361 32 is_stmt 0 view .LVU204
 822 0028 8361     		str	r3, [r0, #24]
 362:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 823              		.loc 1 362 3 is_stmt 1 view .LVU205
 362:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 824              		.loc 1 362 23 is_stmt 0 view .LVU206
 825 002a 0323     		movs	r3, #3
 826 002c 0393     		str	r3, [sp, #12]
 363:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 827              		.loc 1 363 3 is_stmt 1 view .LVU207
 364:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 828              		.loc 1 364 3 view .LVU208
 364:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 829              		.loc 1 364 24 is_stmt 0 view .LVU209
 830 002e 0123     		movs	r3, #1
 831 0030 0593     		str	r3, [sp, #20]
 365:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 832              		.loc 1 365 3 is_stmt 1 view .LVU210
ARM GAS  /tmp/ccgS1raD.s 			page 30


 366:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 833              		.loc 1 366 3 view .LVU211
 367:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 834              		.loc 1 367 3 view .LVU212
 368:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 835              		.loc 1 368 3 view .LVU213
 368:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 836              		.loc 1 368 24 is_stmt 0 view .LVU214
 837 0032 0993     		str	r3, [sp, #36]
 369:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 838              		.loc 1 369 3 is_stmt 1 view .LVU215
 370:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 839              		.loc 1 370 3 view .LVU216
 371:Core/Src/main.c ****   {
 840              		.loc 1 371 3 view .LVU217
 371:Core/Src/main.c ****   {
 841              		.loc 1 371 7 is_stmt 0 view .LVU218
 842 0034 03A9     		add	r1, sp, #12
 843 0036 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 844              	.LVL30:
 371:Core/Src/main.c ****   {
 845              		.loc 1 371 6 view .LVU219
 846 003a 50B9     		cbnz	r0, .L56
 375:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 847              		.loc 1 375 3 is_stmt 1 view .LVU220
 375:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 848              		.loc 1 375 37 is_stmt 0 view .LVU221
 849 003c 0023     		movs	r3, #0
 850 003e 0193     		str	r3, [sp, #4]
 376:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 851              		.loc 1 376 3 is_stmt 1 view .LVU222
 376:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 852              		.loc 1 376 33 is_stmt 0 view .LVU223
 853 0040 0293     		str	r3, [sp, #8]
 377:Core/Src/main.c ****   {
 854              		.loc 1 377 3 is_stmt 1 view .LVU224
 377:Core/Src/main.c ****   {
 855              		.loc 1 377 7 is_stmt 0 view .LVU225
 856 0042 01A9     		add	r1, sp, #4
 857 0044 0548     		ldr	r0, .L58
 858 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 859              	.LVL31:
 377:Core/Src/main.c ****   {
 860              		.loc 1 377 6 view .LVU226
 861 004a 20B9     		cbnz	r0, .L57
 385:Core/Src/main.c **** 
 862              		.loc 1 385 1 view .LVU227
 863 004c 0DB0     		add	sp, sp, #52
 864              	.LCFI13:
 865              		.cfi_remember_state
 866              		.cfi_def_cfa_offset 4
 867              		@ sp needed
 868 004e 5DF804FB 		ldr	pc, [sp], #4
 869              	.L56:
 870              	.LCFI14:
 871              		.cfi_restore_state
 373:Core/Src/main.c ****   }
ARM GAS  /tmp/ccgS1raD.s 			page 31


 872              		.loc 1 373 5 is_stmt 1 view .LVU228
 873 0052 FFF7FEFF 		bl	Error_Handler
 874              	.LVL32:
 875              	.L57:
 379:Core/Src/main.c ****   }
 876              		.loc 1 379 5 view .LVU229
 877 0056 FFF7FEFF 		bl	Error_Handler
 878              	.LVL33:
 879              	.L59:
 880 005a 00BF     		.align	2
 881              	.L58:
 882 005c 00000000 		.word	.LANCHOR17
 883              		.cfi_endproc
 884              	.LFE142:
 886              		.section	.text.MX_TIM3_Init,"ax",%progbits
 887              		.align	1
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 892              	MX_TIM3_Init:
 893              	.LFB143:
 393:Core/Src/main.c **** 
 894              		.loc 1 393 1 view -0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 40
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898 0000 00B5     		push	{lr}
 899              	.LCFI15:
 900              		.cfi_def_cfa_offset 4
 901              		.cfi_offset 14, -4
 902 0002 8BB0     		sub	sp, sp, #44
 903              	.LCFI16:
 904              		.cfi_def_cfa_offset 48
 399:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 905              		.loc 1 399 3 view .LVU231
 399:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 906              		.loc 1 399 27 is_stmt 0 view .LVU232
 907 0004 0023     		movs	r3, #0
 908 0006 0893     		str	r3, [sp, #32]
 909 0008 0993     		str	r3, [sp, #36]
 400:Core/Src/main.c **** 
 910              		.loc 1 400 3 is_stmt 1 view .LVU233
 400:Core/Src/main.c **** 
 911              		.loc 1 400 22 is_stmt 0 view .LVU234
 912 000a 0193     		str	r3, [sp, #4]
 913 000c 0293     		str	r3, [sp, #8]
 914 000e 0393     		str	r3, [sp, #12]
 915 0010 0493     		str	r3, [sp, #16]
 916 0012 0593     		str	r3, [sp, #20]
 917 0014 0693     		str	r3, [sp, #24]
 918 0016 0793     		str	r3, [sp, #28]
 405:Core/Src/main.c ****   htim3.Init.Prescaler = 4;
 919              		.loc 1 405 3 is_stmt 1 view .LVU235
 405:Core/Src/main.c ****   htim3.Init.Prescaler = 4;
 920              		.loc 1 405 18 is_stmt 0 view .LVU236
 921 0018 1A48     		ldr	r0, .L70
 922 001a 1B4A     		ldr	r2, .L70+4
ARM GAS  /tmp/ccgS1raD.s 			page 32


 923 001c 0260     		str	r2, [r0]
 406:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 924              		.loc 1 406 3 is_stmt 1 view .LVU237
 406:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 925              		.loc 1 406 24 is_stmt 0 view .LVU238
 926 001e 0422     		movs	r2, #4
 927 0020 4260     		str	r2, [r0, #4]
 407:Core/Src/main.c ****   htim3.Init.Period = 999;
 928              		.loc 1 407 3 is_stmt 1 view .LVU239
 407:Core/Src/main.c ****   htim3.Init.Period = 999;
 929              		.loc 1 407 26 is_stmt 0 view .LVU240
 930 0022 8360     		str	r3, [r0, #8]
 408:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 931              		.loc 1 408 3 is_stmt 1 view .LVU241
 408:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 932              		.loc 1 408 21 is_stmt 0 view .LVU242
 933 0024 40F2E732 		movw	r2, #999
 934 0028 C260     		str	r2, [r0, #12]
 409:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 935              		.loc 1 409 3 is_stmt 1 view .LVU243
 409:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 936              		.loc 1 409 28 is_stmt 0 view .LVU244
 937 002a 0361     		str	r3, [r0, #16]
 410:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 938              		.loc 1 410 3 is_stmt 1 view .LVU245
 410:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 939              		.loc 1 410 32 is_stmt 0 view .LVU246
 940 002c 8361     		str	r3, [r0, #24]
 411:Core/Src/main.c ****   {
 941              		.loc 1 411 3 is_stmt 1 view .LVU247
 411:Core/Src/main.c ****   {
 942              		.loc 1 411 7 is_stmt 0 view .LVU248
 943 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 944              	.LVL34:
 411:Core/Src/main.c ****   {
 945              		.loc 1 411 6 view .LVU249
 946 0032 F8B9     		cbnz	r0, .L66
 415:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 947              		.loc 1 415 3 is_stmt 1 view .LVU250
 415:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 948              		.loc 1 415 37 is_stmt 0 view .LVU251
 949 0034 0023     		movs	r3, #0
 950 0036 0893     		str	r3, [sp, #32]
 416:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 951              		.loc 1 416 3 is_stmt 1 view .LVU252
 416:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 952              		.loc 1 416 33 is_stmt 0 view .LVU253
 953 0038 0993     		str	r3, [sp, #36]
 417:Core/Src/main.c ****   {
 954              		.loc 1 417 3 is_stmt 1 view .LVU254
 417:Core/Src/main.c ****   {
 955              		.loc 1 417 7 is_stmt 0 view .LVU255
 956 003a 08A9     		add	r1, sp, #32
 957 003c 1148     		ldr	r0, .L70
 958 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 959              	.LVL35:
 417:Core/Src/main.c ****   {
ARM GAS  /tmp/ccgS1raD.s 			page 33


 960              		.loc 1 417 6 view .LVU256
 961 0042 C8B9     		cbnz	r0, .L67
 421:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 962              		.loc 1 421 3 is_stmt 1 view .LVU257
 421:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 963              		.loc 1 421 20 is_stmt 0 view .LVU258
 964 0044 6023     		movs	r3, #96
 965 0046 0193     		str	r3, [sp, #4]
 422:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 966              		.loc 1 422 3 is_stmt 1 view .LVU259
 422:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 967              		.loc 1 422 19 is_stmt 0 view .LVU260
 968 0048 0022     		movs	r2, #0
 969 004a 0292     		str	r2, [sp, #8]
 423:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 970              		.loc 1 423 3 is_stmt 1 view .LVU261
 423:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 971              		.loc 1 423 24 is_stmt 0 view .LVU262
 972 004c 0392     		str	r2, [sp, #12]
 424:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 973              		.loc 1 424 3 is_stmt 1 view .LVU263
 424:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 974              		.loc 1 424 24 is_stmt 0 view .LVU264
 975 004e 0592     		str	r2, [sp, #20]
 425:Core/Src/main.c ****   {
 976              		.loc 1 425 3 is_stmt 1 view .LVU265
 425:Core/Src/main.c ****   {
 977              		.loc 1 425 7 is_stmt 0 view .LVU266
 978 0050 01A9     		add	r1, sp, #4
 979 0052 0C48     		ldr	r0, .L70
 980 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 981              	.LVL36:
 425:Core/Src/main.c ****   {
 982              		.loc 1 425 6 view .LVU267
 983 0058 80B9     		cbnz	r0, .L68
 429:Core/Src/main.c ****   {
 984              		.loc 1 429 3 is_stmt 1 view .LVU268
 429:Core/Src/main.c ****   {
 985              		.loc 1 429 7 is_stmt 0 view .LVU269
 986 005a 0422     		movs	r2, #4
 987 005c 0DEB0201 		add	r1, sp, r2
 988 0060 0848     		ldr	r0, .L70
 989 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 990              	.LVL37:
 429:Core/Src/main.c ****   {
 991              		.loc 1 429 6 view .LVU270
 992 0066 58B9     		cbnz	r0, .L69
 436:Core/Src/main.c **** 
 993              		.loc 1 436 3 is_stmt 1 view .LVU271
 994 0068 0648     		ldr	r0, .L70
 995 006a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 996              	.LVL38:
 438:Core/Src/main.c **** 
 997              		.loc 1 438 1 is_stmt 0 view .LVU272
 998 006e 0BB0     		add	sp, sp, #44
 999              	.LCFI17:
 1000              		.cfi_remember_state
ARM GAS  /tmp/ccgS1raD.s 			page 34


 1001              		.cfi_def_cfa_offset 4
 1002              		@ sp needed
 1003 0070 5DF804FB 		ldr	pc, [sp], #4
 1004              	.L66:
 1005              	.LCFI18:
 1006              		.cfi_restore_state
 413:Core/Src/main.c ****   }
 1007              		.loc 1 413 5 is_stmt 1 view .LVU273
 1008 0074 FFF7FEFF 		bl	Error_Handler
 1009              	.LVL39:
 1010              	.L67:
 419:Core/Src/main.c ****   }
 1011              		.loc 1 419 5 view .LVU274
 1012 0078 FFF7FEFF 		bl	Error_Handler
 1013              	.LVL40:
 1014              	.L68:
 427:Core/Src/main.c ****   }
 1015              		.loc 1 427 5 view .LVU275
 1016 007c FFF7FEFF 		bl	Error_Handler
 1017              	.LVL41:
 1018              	.L69:
 431:Core/Src/main.c ****   }
 1019              		.loc 1 431 5 view .LVU276
 1020 0080 FFF7FEFF 		bl	Error_Handler
 1021              	.LVL42:
 1022              	.L71:
 1023              		.align	2
 1024              	.L70:
 1025 0084 00000000 		.word	.LANCHOR19
 1026 0088 00040040 		.word	1073742848
 1027              		.cfi_endproc
 1028              	.LFE143:
 1030              		.section	.text.MX_UART4_Init,"ax",%progbits
 1031              		.align	1
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1036              	MX_UART4_Init:
 1037              	.LFB144:
 446:Core/Src/main.c **** 
 1038              		.loc 1 446 1 view -0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042 0000 08B5     		push	{r3, lr}
 1043              	.LCFI19:
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 3, -8
 1046              		.cfi_offset 14, -4
 455:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1047              		.loc 1 455 3 view .LVU278
 455:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1048              		.loc 1 455 19 is_stmt 0 view .LVU279
 1049 0002 0A48     		ldr	r0, .L76
 1050 0004 0A4B     		ldr	r3, .L76+4
 1051 0006 0360     		str	r3, [r0]
 456:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccgS1raD.s 			page 35


 1052              		.loc 1 456 3 is_stmt 1 view .LVU280
 456:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1053              		.loc 1 456 24 is_stmt 0 view .LVU281
 1054 0008 4FF4E133 		mov	r3, #115200
 1055 000c 4360     		str	r3, [r0, #4]
 457:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1056              		.loc 1 457 3 is_stmt 1 view .LVU282
 457:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1057              		.loc 1 457 26 is_stmt 0 view .LVU283
 1058 000e 0023     		movs	r3, #0
 1059 0010 8360     		str	r3, [r0, #8]
 458:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1060              		.loc 1 458 3 is_stmt 1 view .LVU284
 458:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1061              		.loc 1 458 24 is_stmt 0 view .LVU285
 1062 0012 C360     		str	r3, [r0, #12]
 459:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1063              		.loc 1 459 3 is_stmt 1 view .LVU286
 459:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1064              		.loc 1 459 22 is_stmt 0 view .LVU287
 1065 0014 0361     		str	r3, [r0, #16]
 460:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1066              		.loc 1 460 3 is_stmt 1 view .LVU288
 460:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1067              		.loc 1 460 20 is_stmt 0 view .LVU289
 1068 0016 0C22     		movs	r2, #12
 1069 0018 4261     		str	r2, [r0, #20]
 461:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1070              		.loc 1 461 3 is_stmt 1 view .LVU290
 461:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1071              		.loc 1 461 25 is_stmt 0 view .LVU291
 1072 001a 8361     		str	r3, [r0, #24]
 462:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1073              		.loc 1 462 3 is_stmt 1 view .LVU292
 462:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1074              		.loc 1 462 28 is_stmt 0 view .LVU293
 1075 001c C361     		str	r3, [r0, #28]
 463:Core/Src/main.c ****   {
 1076              		.loc 1 463 3 is_stmt 1 view .LVU294
 463:Core/Src/main.c ****   {
 1077              		.loc 1 463 7 is_stmt 0 view .LVU295
 1078 001e FFF7FEFF 		bl	HAL_UART_Init
 1079              	.LVL43:
 463:Core/Src/main.c ****   {
 1080              		.loc 1 463 6 view .LVU296
 1081 0022 00B9     		cbnz	r0, .L75
 471:Core/Src/main.c **** 
 1082              		.loc 1 471 1 view .LVU297
 1083 0024 08BD     		pop	{r3, pc}
 1084              	.L75:
 465:Core/Src/main.c ****   }
 1085              		.loc 1 465 5 is_stmt 1 view .LVU298
 1086 0026 FFF7FEFF 		bl	Error_Handler
 1087              	.LVL44:
 1088              	.L77:
 1089 002a 00BF     		.align	2
 1090              	.L76:
ARM GAS  /tmp/ccgS1raD.s 			page 36


 1091 002c 00000000 		.word	.LANCHOR0
 1092 0030 004C0040 		.word	1073761280
 1093              		.cfi_endproc
 1094              	.LFE144:
 1096              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1097              		.align	1
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1102              	MX_TIM1_Init:
 1103              	.LFB141:
 298:Core/Src/main.c **** 
 1104              		.loc 1 298 1 view -0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 24
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 1108 0000 00B5     		push	{lr}
 1109              	.LCFI20:
 1110              		.cfi_def_cfa_offset 4
 1111              		.cfi_offset 14, -4
 1112 0002 87B0     		sub	sp, sp, #28
 1113              	.LCFI21:
 1114              		.cfi_def_cfa_offset 32
 304:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1115              		.loc 1 304 3 view .LVU300
 304:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1116              		.loc 1 304 26 is_stmt 0 view .LVU301
 1117 0004 0023     		movs	r3, #0
 1118 0006 0293     		str	r3, [sp, #8]
 1119 0008 0393     		str	r3, [sp, #12]
 1120 000a 0493     		str	r3, [sp, #16]
 1121 000c 0593     		str	r3, [sp, #20]
 305:Core/Src/main.c **** 
 1122              		.loc 1 305 3 is_stmt 1 view .LVU302
 305:Core/Src/main.c **** 
 1123              		.loc 1 305 27 is_stmt 0 view .LVU303
 1124 000e 0093     		str	r3, [sp]
 1125 0010 0193     		str	r3, [sp, #4]
 310:Core/Src/main.c ****   htim1.Init.Prescaler = 42000;
 1126              		.loc 1 310 3 is_stmt 1 view .LVU304
 310:Core/Src/main.c ****   htim1.Init.Prescaler = 42000;
 1127              		.loc 1 310 18 is_stmt 0 view .LVU305
 1128 0012 1448     		ldr	r0, .L86
 1129 0014 144A     		ldr	r2, .L86+4
 1130 0016 0260     		str	r2, [r0]
 311:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1131              		.loc 1 311 3 is_stmt 1 view .LVU306
 311:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1132              		.loc 1 311 24 is_stmt 0 view .LVU307
 1133 0018 4AF21042 		movw	r2, #42000
 1134 001c 4260     		str	r2, [r0, #4]
 312:Core/Src/main.c ****   htim1.Init.Period = 19;
 1135              		.loc 1 312 3 is_stmt 1 view .LVU308
 312:Core/Src/main.c ****   htim1.Init.Period = 19;
 1136              		.loc 1 312 26 is_stmt 0 view .LVU309
 1137 001e 8360     		str	r3, [r0, #8]
 313:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccgS1raD.s 			page 37


 1138              		.loc 1 313 3 is_stmt 1 view .LVU310
 313:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1139              		.loc 1 313 21 is_stmt 0 view .LVU311
 1140 0020 1322     		movs	r2, #19
 1141 0022 C260     		str	r2, [r0, #12]
 314:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1142              		.loc 1 314 3 is_stmt 1 view .LVU312
 314:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1143              		.loc 1 314 28 is_stmt 0 view .LVU313
 1144 0024 0361     		str	r3, [r0, #16]
 315:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1145              		.loc 1 315 3 is_stmt 1 view .LVU314
 315:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1146              		.loc 1 315 32 is_stmt 0 view .LVU315
 1147 0026 4361     		str	r3, [r0, #20]
 316:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1148              		.loc 1 316 3 is_stmt 1 view .LVU316
 316:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1149              		.loc 1 316 32 is_stmt 0 view .LVU317
 1150 0028 8361     		str	r3, [r0, #24]
 317:Core/Src/main.c ****   {
 1151              		.loc 1 317 3 is_stmt 1 view .LVU318
 317:Core/Src/main.c ****   {
 1152              		.loc 1 317 7 is_stmt 0 view .LVU319
 1153 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1154              	.LVL45:
 317:Core/Src/main.c ****   {
 1155              		.loc 1 317 6 view .LVU320
 1156 002e 90B9     		cbnz	r0, .L83
 321:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1157              		.loc 1 321 3 is_stmt 1 view .LVU321
 321:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1158              		.loc 1 321 34 is_stmt 0 view .LVU322
 1159 0030 4FF48053 		mov	r3, #4096
 1160 0034 0293     		str	r3, [sp, #8]
 322:Core/Src/main.c ****   {
 1161              		.loc 1 322 3 is_stmt 1 view .LVU323
 322:Core/Src/main.c ****   {
 1162              		.loc 1 322 7 is_stmt 0 view .LVU324
 1163 0036 02A9     		add	r1, sp, #8
 1164 0038 0A48     		ldr	r0, .L86
 1165 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1166              	.LVL46:
 322:Core/Src/main.c ****   {
 1167              		.loc 1 322 6 view .LVU325
 1168 003e 60B9     		cbnz	r0, .L84
 326:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1169              		.loc 1 326 3 is_stmt 1 view .LVU326
 326:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1170              		.loc 1 326 37 is_stmt 0 view .LVU327
 1171 0040 0023     		movs	r3, #0
 1172 0042 0093     		str	r3, [sp]
 327:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1173              		.loc 1 327 3 is_stmt 1 view .LVU328
 327:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1174              		.loc 1 327 33 is_stmt 0 view .LVU329
 1175 0044 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccgS1raD.s 			page 38


 328:Core/Src/main.c ****   {
 1176              		.loc 1 328 3 is_stmt 1 view .LVU330
 328:Core/Src/main.c ****   {
 1177              		.loc 1 328 7 is_stmt 0 view .LVU331
 1178 0046 6946     		mov	r1, sp
 1179 0048 0648     		ldr	r0, .L86
 1180 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1181              	.LVL47:
 328:Core/Src/main.c ****   {
 1182              		.loc 1 328 6 view .LVU332
 1183 004e 30B9     		cbnz	r0, .L85
 336:Core/Src/main.c **** 
 1184              		.loc 1 336 1 view .LVU333
 1185 0050 07B0     		add	sp, sp, #28
 1186              	.LCFI22:
 1187              		.cfi_remember_state
 1188              		.cfi_def_cfa_offset 4
 1189              		@ sp needed
 1190 0052 5DF804FB 		ldr	pc, [sp], #4
 1191              	.L83:
 1192              	.LCFI23:
 1193              		.cfi_restore_state
 319:Core/Src/main.c ****   }
 1194              		.loc 1 319 5 is_stmt 1 view .LVU334
 1195 0056 FFF7FEFF 		bl	Error_Handler
 1196              	.LVL48:
 1197              	.L84:
 324:Core/Src/main.c ****   }
 1198              		.loc 1 324 5 view .LVU335
 1199 005a FFF7FEFF 		bl	Error_Handler
 1200              	.LVL49:
 1201              	.L85:
 330:Core/Src/main.c ****   }
 1202              		.loc 1 330 5 view .LVU336
 1203 005e FFF7FEFF 		bl	Error_Handler
 1204              	.LVL50:
 1205              	.L87:
 1206 0062 00BF     		.align	2
 1207              	.L86:
 1208 0064 00000000 		.word	.LANCHOR10
 1209 0068 00000140 		.word	1073807360
 1210              		.cfi_endproc
 1211              	.LFE141:
 1213              		.section	.text.SystemClock_Config,"ax",%progbits
 1214              		.align	1
 1215              		.global	SystemClock_Config
 1216              		.syntax unified
 1217              		.thumb
 1218              		.thumb_func
 1220              	SystemClock_Config:
 1221              	.LFB140:
 254:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1222              		.loc 1 254 1 view -0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 80
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccgS1raD.s 			page 39


 1227              	.LCFI24:
 1228              		.cfi_def_cfa_offset 4
 1229              		.cfi_offset 14, -4
 1230 0002 95B0     		sub	sp, sp, #84
 1231              	.LCFI25:
 1232              		.cfi_def_cfa_offset 88
 255:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1233              		.loc 1 255 3 view .LVU338
 255:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1234              		.loc 1 255 22 is_stmt 0 view .LVU339
 1235 0004 3022     		movs	r2, #48
 1236 0006 0021     		movs	r1, #0
 1237 0008 08A8     		add	r0, sp, #32
 1238 000a FFF7FEFF 		bl	memset
 1239              	.LVL51:
 256:Core/Src/main.c **** 
 1240              		.loc 1 256 3 is_stmt 1 view .LVU340
 256:Core/Src/main.c **** 
 1241              		.loc 1 256 22 is_stmt 0 view .LVU341
 1242 000e 0023     		movs	r3, #0
 1243 0010 0393     		str	r3, [sp, #12]
 1244 0012 0493     		str	r3, [sp, #16]
 1245 0014 0593     		str	r3, [sp, #20]
 1246 0016 0693     		str	r3, [sp, #24]
 1247 0018 0793     		str	r3, [sp, #28]
 260:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1248              		.loc 1 260 3 is_stmt 1 view .LVU342
 1249              	.LBB11:
 260:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1250              		.loc 1 260 3 view .LVU343
 1251 001a 0193     		str	r3, [sp, #4]
 260:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1252              		.loc 1 260 3 view .LVU344
 1253 001c 204A     		ldr	r2, .L94
 1254 001e 116C     		ldr	r1, [r2, #64]
 1255 0020 41F08051 		orr	r1, r1, #268435456
 1256 0024 1164     		str	r1, [r2, #64]
 260:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1257              		.loc 1 260 3 view .LVU345
 1258 0026 126C     		ldr	r2, [r2, #64]
 1259 0028 02F08052 		and	r2, r2, #268435456
 1260 002c 0192     		str	r2, [sp, #4]
 260:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1261              		.loc 1 260 3 view .LVU346
 1262 002e 019A     		ldr	r2, [sp, #4]
 1263              	.LBE11:
 260:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1264              		.loc 1 260 3 view .LVU347
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1265              		.loc 1 261 3 view .LVU348
 1266              	.LBB12:
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1267              		.loc 1 261 3 view .LVU349
 1268 0030 0293     		str	r3, [sp, #8]
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1269              		.loc 1 261 3 view .LVU350
 1270 0032 1C4B     		ldr	r3, .L94+4
ARM GAS  /tmp/ccgS1raD.s 			page 40


 1271 0034 1A68     		ldr	r2, [r3]
 1272 0036 42F48042 		orr	r2, r2, #16384
 1273 003a 1A60     		str	r2, [r3]
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1274              		.loc 1 261 3 view .LVU351
 1275 003c 1B68     		ldr	r3, [r3]
 1276 003e 03F48043 		and	r3, r3, #16384
 1277 0042 0293     		str	r3, [sp, #8]
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1278              		.loc 1 261 3 view .LVU352
 1279 0044 029B     		ldr	r3, [sp, #8]
 1280              	.LBE12:
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1281              		.loc 1 261 3 view .LVU353
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1282              		.loc 1 265 3 view .LVU354
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1283              		.loc 1 265 36 is_stmt 0 view .LVU355
 1284 0046 0123     		movs	r3, #1
 1285 0048 0893     		str	r3, [sp, #32]
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1286              		.loc 1 266 3 is_stmt 1 view .LVU356
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1287              		.loc 1 266 30 is_stmt 0 view .LVU357
 1288 004a 4FF48033 		mov	r3, #65536
 1289 004e 0993     		str	r3, [sp, #36]
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1290              		.loc 1 267 3 is_stmt 1 view .LVU358
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1291              		.loc 1 267 34 is_stmt 0 view .LVU359
 1292 0050 0223     		movs	r3, #2
 1293 0052 0E93     		str	r3, [sp, #56]
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1294              		.loc 1 268 3 is_stmt 1 view .LVU360
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1295              		.loc 1 268 35 is_stmt 0 view .LVU361
 1296 0054 4FF48002 		mov	r2, #4194304
 1297 0058 0F92     		str	r2, [sp, #60]
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1298              		.loc 1 269 3 is_stmt 1 view .LVU362
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1299              		.loc 1 269 30 is_stmt 0 view .LVU363
 1300 005a 0822     		movs	r2, #8
 1301 005c 1092     		str	r2, [sp, #64]
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1302              		.loc 1 270 3 is_stmt 1 view .LVU364
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1303              		.loc 1 270 30 is_stmt 0 view .LVU365
 1304 005e 4FF4A872 		mov	r2, #336
 1305 0062 1192     		str	r2, [sp, #68]
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1306              		.loc 1 271 3 is_stmt 1 view .LVU366
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1307              		.loc 1 271 30 is_stmt 0 view .LVU367
 1308 0064 1293     		str	r3, [sp, #72]
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1309              		.loc 1 272 3 is_stmt 1 view .LVU368
ARM GAS  /tmp/ccgS1raD.s 			page 41


 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1310              		.loc 1 272 30 is_stmt 0 view .LVU369
 1311 0066 0423     		movs	r3, #4
 1312 0068 1393     		str	r3, [sp, #76]
 273:Core/Src/main.c ****   {
 1313              		.loc 1 273 3 is_stmt 1 view .LVU370
 273:Core/Src/main.c ****   {
 1314              		.loc 1 273 7 is_stmt 0 view .LVU371
 1315 006a 08A8     		add	r0, sp, #32
 1316 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1317              	.LVL52:
 273:Core/Src/main.c ****   {
 1318              		.loc 1 273 6 view .LVU372
 1319 0070 88B9     		cbnz	r0, .L92
 279:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1320              		.loc 1 279 3 is_stmt 1 view .LVU373
 279:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1321              		.loc 1 279 31 is_stmt 0 view .LVU374
 1322 0072 0F23     		movs	r3, #15
 1323 0074 0393     		str	r3, [sp, #12]
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1324              		.loc 1 281 3 is_stmt 1 view .LVU375
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1325              		.loc 1 281 34 is_stmt 0 view .LVU376
 1326 0076 0223     		movs	r3, #2
 1327 0078 0493     		str	r3, [sp, #16]
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1328              		.loc 1 282 3 is_stmt 1 view .LVU377
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1329              		.loc 1 282 35 is_stmt 0 view .LVU378
 1330 007a 0023     		movs	r3, #0
 1331 007c 0593     		str	r3, [sp, #20]
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 1332              		.loc 1 283 3 is_stmt 1 view .LVU379
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 1333              		.loc 1 283 36 is_stmt 0 view .LVU380
 1334 007e 4FF4A053 		mov	r3, #5120
 1335 0082 0693     		str	r3, [sp, #24]
 284:Core/Src/main.c **** 
 1336              		.loc 1 284 3 is_stmt 1 view .LVU381
 284:Core/Src/main.c **** 
 1337              		.loc 1 284 36 is_stmt 0 view .LVU382
 1338 0084 0793     		str	r3, [sp, #28]
 286:Core/Src/main.c ****   {
 1339              		.loc 1 286 3 is_stmt 1 view .LVU383
 286:Core/Src/main.c ****   {
 1340              		.loc 1 286 7 is_stmt 0 view .LVU384
 1341 0086 0521     		movs	r1, #5
 1342 0088 03A8     		add	r0, sp, #12
 1343 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1344              	.LVL53:
 286:Core/Src/main.c ****   {
 1345              		.loc 1 286 6 view .LVU385
 1346 008e 20B9     		cbnz	r0, .L93
 290:Core/Src/main.c **** 
 1347              		.loc 1 290 1 view .LVU386
 1348 0090 15B0     		add	sp, sp, #84
ARM GAS  /tmp/ccgS1raD.s 			page 42


 1349              	.LCFI26:
 1350              		.cfi_remember_state
 1351              		.cfi_def_cfa_offset 4
 1352              		@ sp needed
 1353 0092 5DF804FB 		ldr	pc, [sp], #4
 1354              	.L92:
 1355              	.LCFI27:
 1356              		.cfi_restore_state
 275:Core/Src/main.c ****   }
 1357              		.loc 1 275 5 is_stmt 1 view .LVU387
 1358 0096 FFF7FEFF 		bl	Error_Handler
 1359              	.LVL54:
 1360              	.L93:
 288:Core/Src/main.c ****   }
 1361              		.loc 1 288 5 view .LVU388
 1362 009a FFF7FEFF 		bl	Error_Handler
 1363              	.LVL55:
 1364              	.L95:
 1365 009e 00BF     		.align	2
 1366              	.L94:
 1367 00a0 00380240 		.word	1073887232
 1368 00a4 00700040 		.word	1073770496
 1369              		.cfi_endproc
 1370              	.LFE140:
 1372              		.global	__aeabi_i2d
 1373              		.global	__aeabi_dmul
 1374              		.global	__aeabi_d2f
 1375              		.global	__aeabi_f2d
 1376              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1377              		.align	2
 1378              	.LC0:
 1379 0000 256C667C 		.ascii	"%lf|%lf|%lf|%lf|%lf\015\012\000"
 1379      256C667C 
 1379      256C667C 
 1379      256C667C 
 1379      256C660D 
 1380              		.section	.text.main,"ax",%progbits
 1381              		.align	1
 1382              		.global	main
 1383              		.syntax unified
 1384              		.thumb
 1385              		.thumb_func
 1387              	main:
 1388              	.LFB134:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1389              		.loc 1 106 1 view -0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1394              	.LCFI28:
 1395              		.cfi_def_cfa_offset 24
 1396              		.cfi_offset 4, -24
 1397              		.cfi_offset 5, -20
 1398              		.cfi_offset 6, -16
 1399              		.cfi_offset 7, -12
 1400              		.cfi_offset 8, -8
ARM GAS  /tmp/ccgS1raD.s 			page 43


 1401              		.cfi_offset 14, -4
 1402 0004 88B0     		sub	sp, sp, #32
 1403              	.LCFI29:
 1404              		.cfi_def_cfa_offset 56
 114:Core/Src/main.c **** 
 1405              		.loc 1 114 3 view .LVU390
 1406 0006 FFF7FEFF 		bl	HAL_Init
 1407              	.LVL56:
 121:Core/Src/main.c **** 
 1408              		.loc 1 121 3 view .LVU391
 1409 000a FFF7FEFF 		bl	SystemClock_Config
 1410              	.LVL57:
 128:Core/Src/main.c ****   MX_DMA_Init();
 1411              		.loc 1 128 3 view .LVU392
 1412 000e FFF7FEFF 		bl	MX_GPIO_Init
 1413              	.LVL58:
 129:Core/Src/main.c ****   MX_TIM2_Init();
 1414              		.loc 1 129 3 view .LVU393
 1415 0012 FFF7FEFF 		bl	MX_DMA_Init
 1416              	.LVL59:
 130:Core/Src/main.c ****   MX_TIM3_Init();
 1417              		.loc 1 130 3 view .LVU394
 1418 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1419              	.LVL60:
 131:Core/Src/main.c ****   MX_UART4_Init();
 1420              		.loc 1 131 3 view .LVU395
 1421 001a FFF7FEFF 		bl	MX_TIM3_Init
 1422              	.LVL61:
 132:Core/Src/main.c ****   MX_TIM1_Init();
 1423              		.loc 1 132 3 view .LVU396
 1424 001e FFF7FEFF 		bl	MX_UART4_Init
 1425              	.LVL62:
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1426              		.loc 1 133 3 view .LVU397
 1427 0022 FFF7FEFF 		bl	MX_TIM1_Init
 1428              	.LVL63:
 135:Core/Src/main.c **** 	
 1429              		.loc 1 135 2 view .LVU398
 1430 0026 3A48     		ldr	r0, .L103
 1431 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1432              	.LVL64:
 137:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_2);
 1433              		.loc 1 137 2 view .LVU399
 1434 002c 394C     		ldr	r4, .L103+4
 1435 002e 0021     		movs	r1, #0
 1436 0030 2046     		mov	r0, r4
 1437 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1438              	.LVL65:
 138:Core/Src/main.c **** 	
 1439              		.loc 1 138 2 view .LVU400
 1440 0036 0421     		movs	r1, #4
 1441 0038 2046     		mov	r0, r4
 1442 003a FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1443              	.LVL66:
 140:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 1444              		.loc 1 140 2 view .LVU401
 1445 003e 364C     		ldr	r4, .L103+8
ARM GAS  /tmp/ccgS1raD.s 			page 44


 1446 0040 0021     		movs	r1, #0
 1447 0042 2046     		mov	r0, r4
 1448 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1449              	.LVL67:
 141:Core/Src/main.c **** 	HAL_UART_Receive_DMA(&huart4, data, 30);
 1450              		.loc 1 141 2 view .LVU402
 1451 0048 0421     		movs	r1, #4
 1452 004a 2046     		mov	r0, r4
 1453 004c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1454              	.LVL68:
 142:Core/Src/main.c **** 		
 1455              		.loc 1 142 2 view .LVU403
 1456 0050 1E22     		movs	r2, #30
 1457 0052 3249     		ldr	r1, .L103+12
 1458 0054 3248     		ldr	r0, .L103+16
 1459 0056 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1460              	.LVL69:
 144:Core/Src/main.c **** 	char temp = 0;
 1461              		.loc 1 144 2 view .LVU404
 1462              	.LBB13:
 144:Core/Src/main.c **** 	char temp = 0;
 1463              		.loc 1 144 6 view .LVU405
 144:Core/Src/main.c **** 	char temp = 0;
 1464              		.loc 1 144 11 is_stmt 0 view .LVU406
 1465 005a 0023     		movs	r3, #0
 144:Core/Src/main.c **** 	char temp = 0;
 1466              		.loc 1 144 2 view .LVU407
 1467 005c 05E0     		b	.L97
 1468              	.LVL70:
 1469              	.L98:
 144:Core/Src/main.c **** 	char temp = 0;
 1470              		.loc 1 144 31 is_stmt 1 discriminator 3 view .LVU408
 144:Core/Src/main.c **** 	char temp = 0;
 1471              		.loc 1 144 39 is_stmt 0 discriminator 3 view .LVU409
 1472 005e 2F49     		ldr	r1, .L103+12
 1473 0060 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 1474 0062 3032     		adds	r2, r2, #48
 1475 0064 CA54     		strb	r2, [r1, r3]
 144:Core/Src/main.c **** 	char temp = 0;
 1476              		.loc 1 144 26 is_stmt 1 discriminator 3 view .LVU410
 144:Core/Src/main.c **** 	char temp = 0;
 1477              		.loc 1 144 27 is_stmt 0 discriminator 3 view .LVU411
 1478 0066 0133     		adds	r3, r3, #1
 1479              	.LVL71:
 144:Core/Src/main.c **** 	char temp = 0;
 1480              		.loc 1 144 27 discriminator 3 view .LVU412
 1481 0068 DBB2     		uxtb	r3, r3
 1482              	.LVL72:
 1483              	.L97:
 144:Core/Src/main.c **** 	char temp = 0;
 1484              		.loc 1 144 18 is_stmt 1 discriminator 1 view .LVU413
 144:Core/Src/main.c **** 	char temp = 0;
 1485              		.loc 1 144 2 is_stmt 0 discriminator 1 view .LVU414
 1486 006a 1D2B     		cmp	r3, #29
 1487 006c F7D9     		bls	.L98
 1488              	.LBE13:
 145:Core/Src/main.c **** 	double error = 0, error_dot = 0, pre_error = 0;
ARM GAS  /tmp/ccgS1raD.s 			page 45


 1489              		.loc 1 145 7 view .LVU415
 1490 006e 0024     		movs	r4, #0
 1491 0070 48E0     		b	.L100
 1492              	.LVL73:
 1493              	.L102:
 159:Core/Src/main.c **** 			HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_12);
 1494              		.loc 1 159 4 is_stmt 1 view .LVU416
 160:Core/Src/main.c **** 			HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_14);				
 1495              		.loc 1 160 4 view .LVU417
 1496 0072 2C4C     		ldr	r4, .L103+20
 1497 0074 4FF48051 		mov	r1, #4096
 1498 0078 2046     		mov	r0, r4
 1499 007a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1500              	.LVL74:
 161:Core/Src/main.c **** 		}
 1501              		.loc 1 161 4 view .LVU418
 1502 007e 4FF48041 		mov	r1, #16384
 1503 0082 2046     		mov	r0, r4
 1504 0084 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1505              	.LVL75:
 159:Core/Src/main.c **** 			HAL_GPIO_TogglePin(GPIOD ,GPIO_PIN_12);
 1506              		.loc 1 159 9 is_stmt 0 view .LVU419
 1507 0088 0024     		movs	r4, #0
 1508              	.LVL76:
 1509              	.L99:
 164:Core/Src/main.c **** 		position = count/4.;
 1510              		.loc 1 164 3 is_stmt 1 view .LVU420
 164:Core/Src/main.c **** 		position = count/4.;
 1511              		.loc 1 164 11 is_stmt 0 view .LVU421
 1512 008a 224B     		ldr	r3, .L103+4
 1513 008c 1B68     		ldr	r3, [r3]
 1514 008e 5B6A     		ldr	r3, [r3, #36]
 164:Core/Src/main.c **** 		position = count/4.;
 1515              		.loc 1 164 9 view .LVU422
 1516 0090 1BB2     		sxth	r3, r3
 1517 0092 254A     		ldr	r2, .L103+24
 1518 0094 1380     		strh	r3, [r2]	@ movhi
 165:Core/Src/main.c **** 		
 1519              		.loc 1 165 3 is_stmt 1 view .LVU423
 165:Core/Src/main.c **** 		
 1520              		.loc 1 165 19 is_stmt 0 view .LVU424
 1521 0096 1088     		ldrh	r0, [r2]
 1522 0098 00B2     		sxth	r0, r0
 1523 009a FFF7FEFF 		bl	__aeabi_i2d
 1524              	.LVL77:
 1525 009e 0022     		movs	r2, #0
 1526 00a0 224B     		ldr	r3, .L103+28
 1527 00a2 FFF7FEFF 		bl	__aeabi_dmul
 1528              	.LVL78:
 1529 00a6 FFF7FEFF 		bl	__aeabi_d2f
 1530              	.LVL79:
 165:Core/Src/main.c **** 		
 1531              		.loc 1 165 12 view .LVU425
 1532 00aa 214B     		ldr	r3, .L103+32
 1533 00ac 1860     		str	r0, [r3]	@ float
 167:Core/Src/main.c **** 		HAL_Delay(10);
 1534              		.loc 1 167 3 is_stmt 1 view .LVU426
ARM GAS  /tmp/ccgS1raD.s 			page 46


 1535 00ae 1868     		ldr	r0, [r3]	@ float
 1536 00b0 204D     		ldr	r5, .L103+36
 1537 00b2 D5F80080 		ldr	r8, [r5]	@ float
 1538 00b6 FFF7FEFF 		bl	__aeabi_f2d
 1539              	.LVL80:
 1540 00ba 0646     		mov	r6, r0
 1541 00bc 0F46     		mov	r7, r1
 1542 00be 1E4B     		ldr	r3, .L103+40
 1543 00c0 1868     		ldr	r0, [r3]	@ float
 1544 00c2 FFF7FEFF 		bl	__aeabi_f2d
 1545              	.LVL81:
 1546 00c6 CDE90601 		strd	r0, [sp, #24]
 1547 00ca 1C4B     		ldr	r3, .L103+44
 1548 00cc 1868     		ldr	r0, [r3]	@ float
 1549 00ce FFF7FEFF 		bl	__aeabi_f2d
 1550              	.LVL82:
 1551 00d2 CDE90401 		strd	r0, [sp, #16]
 1552 00d6 1A4B     		ldr	r3, .L103+48
 1553 00d8 1868     		ldr	r0, [r3]	@ float
 1554 00da FFF7FEFF 		bl	__aeabi_f2d
 1555              	.LVL83:
 1556 00de CDE90201 		strd	r0, [sp, #8]
 1557 00e2 4046     		mov	r0, r8	@ float
 1558 00e4 FFF7FEFF 		bl	__aeabi_f2d
 1559              	.LVL84:
 1560 00e8 CDE90001 		strd	r0, [sp]
 1561 00ec 3246     		mov	r2, r6
 1562 00ee 3B46     		mov	r3, r7
 1563 00f0 1448     		ldr	r0, .L103+52
 1564 00f2 FFF7FEFF 		bl	printf
 1565              	.LVL85:
 168:Core/Src/main.c **** 		
 1566              		.loc 1 168 3 view .LVU427
 1567 00f6 0A20     		movs	r0, #10
 1568 00f8 FFF7FEFF 		bl	HAL_Delay
 1569              	.LVL86:
 170:Core/Src/main.c ****   }
 1570              		.loc 1 170 3 view .LVU428
 1571 00fc 95ED000A 		vldr.32	s0, [r5]
 1572 0100 FFF7FEFF 		bl	PWM_generate
 1573              	.LVL87:
 151:Core/Src/main.c ****   {
 1574              		.loc 1 151 9 view .LVU429
 1575              	.L100:
 151:Core/Src/main.c ****   {
 1576              		.loc 1 151 3 view .LVU430
 156:Core/Src/main.c **** 		if(temp == 20)
 1577              		.loc 1 156 3 view .LVU431
 156:Core/Src/main.c **** 		if(temp == 20)
 1578              		.loc 1 156 7 is_stmt 0 view .LVU432
 1579 0104 0134     		adds	r4, r4, #1
 1580              	.LVL88:
 156:Core/Src/main.c **** 		if(temp == 20)
 1581              		.loc 1 156 7 view .LVU433
 1582 0106 E4B2     		uxtb	r4, r4
 1583              	.LVL89:
 157:Core/Src/main.c **** 		{
ARM GAS  /tmp/ccgS1raD.s 			page 47


 1584              		.loc 1 157 3 is_stmt 1 view .LVU434
 157:Core/Src/main.c **** 		{
 1585              		.loc 1 157 5 is_stmt 0 view .LVU435
 1586 0108 142C     		cmp	r4, #20
 1587 010a B2D0     		beq	.L102
 1588 010c BDE7     		b	.L99
 1589              	.L104:
 1590 010e 00BF     		.align	2
 1591              	.L103:
 1592 0110 00000000 		.word	.LANCHOR10
 1593 0114 00000000 		.word	.LANCHOR17
 1594 0118 00000000 		.word	.LANCHOR19
 1595 011c 00000000 		.word	.LANCHOR1
 1596 0120 00000000 		.word	.LANCHOR0
 1597 0124 000C0240 		.word	1073875968
 1598 0128 00000000 		.word	.LANCHOR16
 1599 012c 0000D03F 		.word	1070596096
 1600 0130 00000000 		.word	.LANCHOR11
 1601 0134 00000000 		.word	.LANCHOR15
 1602 0138 00000000 		.word	.LANCHOR12
 1603 013c 00000000 		.word	.LANCHOR13
 1604 0140 00000000 		.word	.LANCHOR14
 1605 0144 00000000 		.word	.LC0
 1606              		.cfi_endproc
 1607              	.LFE134:
 1609              		.global	hdma_uart4_rx
 1610              		.global	huart4
 1611              		.global	htim3
 1612              		.global	htim2
 1613              		.global	htim1
 1614              		.global	data
 1615              		.global	Value_PWM
 1616              		.global	position
 1617              		.global	uk
 1618              		.global	count
 1619              		.global	mode
 1620              		.global	config
 1621              		.global	set_point
 1622              		.global	Kd
 1623              		.global	Ki
 1624              		.global	Kp
 1625              		.section	.bss.Kd,"aw",%nobits
 1626              		.align	2
 1627              		.set	.LANCHOR12,. + 0
 1630              	Kd:
 1631 0000 00000000 		.space	4
 1632              		.section	.bss.Ki,"aw",%nobits
 1633              		.align	2
 1634              		.set	.LANCHOR13,. + 0
 1637              	Ki:
 1638 0000 00000000 		.space	4
 1639              		.section	.bss.Kp,"aw",%nobits
 1640              		.align	2
 1641              		.set	.LANCHOR14,. + 0
 1644              	Kp:
 1645 0000 00000000 		.space	4
 1646              		.section	.bss.Value_PWM,"aw",%nobits
ARM GAS  /tmp/ccgS1raD.s 			page 48


 1647              		.align	2
 1648              		.set	.LANCHOR18,. + 0
 1651              	Value_PWM:
 1652 0000 00000000 		.space	4
 1653              		.section	.bss.config,"aw",%nobits
 1654              		.align	2
 1655              		.set	.LANCHOR3,. + 0
 1658              	config:
 1659 0000 00000000 		.space	4
 1660              		.section	.bss.count,"aw",%nobits
 1661              		.align	1
 1662              		.set	.LANCHOR16,. + 0
 1665              	count:
 1666 0000 0000     		.space	2
 1667              		.section	.bss.data,"aw",%nobits
 1668              		.align	2
 1669              		.set	.LANCHOR1,. + 0
 1672              	data:
 1673 0000 00000000 		.space	30
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1674              		.section	.bss.ek.5,"aw",%nobits
 1675              		.align	2
 1676              		.set	.LANCHOR5,. + 0
 1679              	ek.5:
 1680 0000 00000000 		.space	4
 1681              		.section	.bss.ek1.4,"aw",%nobits
 1682              		.align	2
 1683              		.set	.LANCHOR6,. + 0
 1686              	ek1.4:
 1687 0000 00000000 		.space	4
 1688              		.section	.bss.ek2.1,"aw",%nobits
 1689              		.align	2
 1690              		.set	.LANCHOR8,. + 0
 1693              	ek2.1:
 1694 0000 00000000 		.space	4
 1695              		.section	.bss.hdma_uart4_rx,"aw",%nobits
 1696              		.align	2
 1699              	hdma_uart4_rx:
 1700 0000 00000000 		.space	96
 1700      00000000 
 1700      00000000 
 1700      00000000 
 1700      00000000 
 1701              		.section	.bss.htim1,"aw",%nobits
 1702              		.align	2
 1703              		.set	.LANCHOR10,. + 0
 1706              	htim1:
 1707 0000 00000000 		.space	64
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1708              		.section	.bss.htim2,"aw",%nobits
 1709              		.align	2
ARM GAS  /tmp/ccgS1raD.s 			page 49


 1710              		.set	.LANCHOR17,. + 0
 1713              	htim2:
 1714 0000 00000000 		.space	64
 1714      00000000 
 1714      00000000 
 1714      00000000 
 1714      00000000 
 1715              		.section	.bss.htim3,"aw",%nobits
 1716              		.align	2
 1717              		.set	.LANCHOR19,. + 0
 1720              	htim3:
 1721 0000 00000000 		.space	64
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1722              		.section	.bss.huart4,"aw",%nobits
 1723              		.align	2
 1724              		.set	.LANCHOR0,. + 0
 1727              	huart4:
 1728 0000 00000000 		.space	64
 1728      00000000 
 1728      00000000 
 1728      00000000 
 1728      00000000 
 1729              		.section	.bss.mode,"aw",%nobits
 1730              		.align	2
 1731              		.set	.LANCHOR2,. + 0
 1734              	mode:
 1735 0000 00000000 		.space	4
 1736              		.section	.bss.position,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR11,. + 0
 1741              	position:
 1742 0000 00000000 		.space	4
 1743              		.section	.bss.set_point,"aw",%nobits
 1744              		.align	2
 1745              		.set	.LANCHOR4,. + 0
 1748              	set_point:
 1749 0000 00000000 		.space	4
 1750              		.section	.bss.uk,"aw",%nobits
 1751              		.align	2
 1752              		.set	.LANCHOR15,. + 0
 1755              	uk:
 1756 0000 00000000 		.space	4
 1757              		.section	.bss.uk.0,"aw",%nobits
 1758              		.align	2
 1759              		.set	.LANCHOR9,. + 0
 1762              	uk.0:
 1763 0000 00000000 		.space	4
 1764              		.section	.bss.uk1.3,"aw",%nobits
 1765              		.align	2
 1766              		.set	.LANCHOR7,. + 0
 1769              	uk1.3:
 1770 0000 00000000 		.space	4
 1771              		.text
 1772              	.Letext0:
ARM GAS  /tmp/ccgS1raD.s 			page 50


 1773              		.file 3 "/mnt/c/VSARM/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.
 1774              		.file 4 "/mnt/c/VSARM/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1775              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1776              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1777              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1778              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1779              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1780              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1781              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1782              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1783              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1784              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1785              		.file 15 "Core/Inc/main.h"
 1786              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1787              		.file 17 "/mnt/c/VSARM/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 1788              		.file 18 "<built-in>"
ARM GAS  /tmp/ccgS1raD.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccgS1raD.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccgS1raD.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccgS1raD.s:149    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/ccgS1raD.s:155    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccgS1raD.s:160    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccgS1raD.s:209    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccgS1raD.s:214    .text.__io_putchar:0000000000000000 $t
     /tmp/ccgS1raD.s:220    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccgS1raD.s:256    .text.__io_putchar:000000000000001c $d
     /tmp/ccgS1raD.s:261    .text.parameter_compute:0000000000000000 $t
     /tmp/ccgS1raD.s:267    .text.parameter_compute:0000000000000000 parameter_compute
     /tmp/ccgS1raD.s:339    .text.parameter_compute:0000000000000060 $d
     /tmp/ccgS1raD.s:344    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccgS1raD.s:350    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccgS1raD.s:420    .text.HAL_UART_RxCpltCallback:0000000000000054 $d
     /tmp/ccgS1raD.s:430    .text.PID_compute:0000000000000000 $t
     /tmp/ccgS1raD.s:436    .text.PID_compute:0000000000000000 PID_compute
     /tmp/ccgS1raD.s:540    .text.PID_compute:00000000000000a8 $d
     /tmp/ccgS1raD.s:552    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccgS1raD.s:558    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccgS1raD.s:653    .text.HAL_TIM_PeriodElapsedCallback:0000000000000080 $d
     /tmp/ccgS1raD.s:668    .text.PWM_generate:0000000000000000 $t
     /tmp/ccgS1raD.s:674    .text.PWM_generate:0000000000000000 PWM_generate
     /tmp/ccgS1raD.s:728    .text.PWM_generate:0000000000000040 $d
     /tmp/ccgS1raD.s:734    .text.Error_Handler:0000000000000000 $t
     /tmp/ccgS1raD.s:740    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccgS1raD.s:772    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccgS1raD.s:777    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccgS1raD.s:882    .text.MX_TIM2_Init:000000000000005c $d
     /tmp/ccgS1raD.s:887    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccgS1raD.s:892    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccgS1raD.s:1025   .text.MX_TIM3_Init:0000000000000084 $d
     /tmp/ccgS1raD.s:1031   .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccgS1raD.s:1036   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccgS1raD.s:1091   .text.MX_UART4_Init:000000000000002c $d
     /tmp/ccgS1raD.s:1097   .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccgS1raD.s:1102   .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccgS1raD.s:1208   .text.MX_TIM1_Init:0000000000000064 $d
     /tmp/ccgS1raD.s:1214   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccgS1raD.s:1220   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccgS1raD.s:1367   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccgS1raD.s:1377   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccgS1raD.s:1381   .text.main:0000000000000000 $t
     /tmp/ccgS1raD.s:1387   .text.main:0000000000000000 main
     /tmp/ccgS1raD.s:1592   .text.main:0000000000000110 $d
     /tmp/ccgS1raD.s:1699   .bss.hdma_uart4_rx:0000000000000000 hdma_uart4_rx
     /tmp/ccgS1raD.s:1727   .bss.huart4:0000000000000000 huart4
     /tmp/ccgS1raD.s:1720   .bss.htim3:0000000000000000 htim3
     /tmp/ccgS1raD.s:1713   .bss.htim2:0000000000000000 htim2
     /tmp/ccgS1raD.s:1706   .bss.htim1:0000000000000000 htim1
     /tmp/ccgS1raD.s:1672   .bss.data:0000000000000000 data
     /tmp/ccgS1raD.s:1651   .bss.Value_PWM:0000000000000000 Value_PWM
     /tmp/ccgS1raD.s:1741   .bss.position:0000000000000000 position
     /tmp/ccgS1raD.s:1755   .bss.uk:0000000000000000 uk
     /tmp/ccgS1raD.s:1665   .bss.count:0000000000000000 count
ARM GAS  /tmp/ccgS1raD.s 			page 52


     /tmp/ccgS1raD.s:1734   .bss.mode:0000000000000000 mode
     /tmp/ccgS1raD.s:1658   .bss.config:0000000000000000 config
     /tmp/ccgS1raD.s:1748   .bss.set_point:0000000000000000 set_point
     /tmp/ccgS1raD.s:1630   .bss.Kd:0000000000000000 Kd
     /tmp/ccgS1raD.s:1637   .bss.Ki:0000000000000000 Ki
     /tmp/ccgS1raD.s:1644   .bss.Kp:0000000000000000 Kp
     /tmp/ccgS1raD.s:1626   .bss.Kd:0000000000000000 $d
     /tmp/ccgS1raD.s:1633   .bss.Ki:0000000000000000 $d
     /tmp/ccgS1raD.s:1640   .bss.Kp:0000000000000000 $d
     /tmp/ccgS1raD.s:1647   .bss.Value_PWM:0000000000000000 $d
     /tmp/ccgS1raD.s:1654   .bss.config:0000000000000000 $d
     /tmp/ccgS1raD.s:1661   .bss.count:0000000000000000 $d
     /tmp/ccgS1raD.s:1668   .bss.data:0000000000000000 $d
     /tmp/ccgS1raD.s:1675   .bss.ek.5:0000000000000000 $d
     /tmp/ccgS1raD.s:1679   .bss.ek.5:0000000000000000 ek.5
     /tmp/ccgS1raD.s:1682   .bss.ek1.4:0000000000000000 $d
     /tmp/ccgS1raD.s:1686   .bss.ek1.4:0000000000000000 ek1.4
     /tmp/ccgS1raD.s:1689   .bss.ek2.1:0000000000000000 $d
     /tmp/ccgS1raD.s:1693   .bss.ek2.1:0000000000000000 ek2.1
     /tmp/ccgS1raD.s:1696   .bss.hdma_uart4_rx:0000000000000000 $d
     /tmp/ccgS1raD.s:1702   .bss.htim1:0000000000000000 $d
     /tmp/ccgS1raD.s:1709   .bss.htim2:0000000000000000 $d
     /tmp/ccgS1raD.s:1716   .bss.htim3:0000000000000000 $d
     /tmp/ccgS1raD.s:1723   .bss.huart4:0000000000000000 $d
     /tmp/ccgS1raD.s:1730   .bss.mode:0000000000000000 $d
     /tmp/ccgS1raD.s:1737   .bss.position:0000000000000000 $d
     /tmp/ccgS1raD.s:1744   .bss.set_point:0000000000000000 $d
     /tmp/ccgS1raD.s:1751   .bss.uk:0000000000000000 $d
     /tmp/ccgS1raD.s:1758   .bss.uk.0:0000000000000000 $d
     /tmp/ccgS1raD.s:1762   .bss.uk.0:0000000000000000 uk.0
     /tmp/ccgS1raD.s:1765   .bss.uk1.3:0000000000000000 $d
     /tmp/ccgS1raD.s:1769   .bss.uk1.3:0000000000000000 uk1.3

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
HAL_GPIO_TogglePin
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_f2d
HAL_Init
HAL_TIM_Base_Start_IT
ARM GAS  /tmp/ccgS1raD.s 			page 53


HAL_TIM_Encoder_Start
HAL_TIM_PWM_Start
HAL_UART_Receive_DMA
printf
HAL_Delay
