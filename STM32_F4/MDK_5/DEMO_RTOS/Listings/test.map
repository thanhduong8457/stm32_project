Component: ARM Compiler 6.14.1 Tool: armlink [5db06d00]

==============================================================================

Section Cross References

    startup_stm32f40_41xxx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(RESET) refers to startup_stm32f40_41xxx.o(STACK) for __initial_sp
    startup_stm32f40_41xxx.o(RESET) refers to startup_stm32f40_41xxx.o(.text) for Reset_Handler
    startup_stm32f40_41xxx.o(RESET) refers to irq_cm4f.o(.text) for SVC_Handler
    startup_stm32f40_41xxx.o(RESET) refers to interrupt.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f40_41xxx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f40_41xxx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f40_41xxx.o(.text) refers to startup_stm32f40_41xxx.o(HEAP) for Heap_Mem
    startup_stm32f40_41xxx.o(.text) refers to startup_stm32f40_41xxx.o(STACK) for Stack_Mem
    system_stm32f4xx.o(.text.SystemInit) refers to system_stm32f4xx.o(.text.SetSysClock) for SetSysClock
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f4xx.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    main.o(.text.main) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to gpio.o(.text.init_gpio) for init_gpio
    main.o(.text.main) refers to delay.o(.text.init_delay) for init_delay
    main.o(.text.main) refers to interrupt.o(.text.init_interrupt) for init_interrupt
    main.o(.text.main) refers to uart.o(.text.init_uart) for init_uart
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to main.o(.text.control_theta_1) for control_theta_1
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to main.o(.text.control_theta_2) for control_theta_2
    main.o(.text.main) refers to main.o(.text.control_theta_3) for control_theta_3
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.control_theta_1) refers to main.o(.bss.theta_1) for theta_1
    main.o(.text.control_theta_1) refers to main.o(.bss.last_theta_1) for last_theta_1
    main.o(.text.control_theta_1) refers to gpio.o(.text.step) for step
    main.o(.ARM.exidx.text.control_theta_1) refers to main.o(.text.control_theta_1) for [Anonymous Symbol]
    main.o(.text.control_theta_2) refers to main.o(.bss.theta_2) for theta_2
    main.o(.text.control_theta_2) refers to main.o(.bss.last_theta_2) for last_theta_2
    main.o(.text.control_theta_2) refers to gpio.o(.text.step) for step
    main.o(.ARM.exidx.text.control_theta_2) refers to main.o(.text.control_theta_2) for [Anonymous Symbol]
    main.o(.text.control_theta_3) refers to main.o(.bss.theta_3) for theta_3
    main.o(.text.control_theta_3) refers to main.o(.bss.last_theta_3) for last_theta_3
    main.o(.text.control_theta_3) refers to gpio.o(.text.step) for step
    main.o(.ARM.exidx.text.control_theta_3) refers to main.o(.text.control_theta_3) for [Anonymous Symbol]
    gpio.o(.text.init_gpio) refers to stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd) for RCC_AHB1PeriphClockCmd
    gpio.o(.text.init_gpio) refers to stm32f4xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    gpio.o(.ARM.exidx.text.init_gpio) refers to gpio.o(.text.init_gpio) for [Anonymous Symbol]
    gpio.o(.text.step) refers to stm32f4xx_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    gpio.o(.text.step) refers to stm32f4xx_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    gpio.o(.text.step) refers to delay.o(.text.delay_us) for delay_us
    gpio.o(.ARM.exidx.text.step) refers to gpio.o(.text.step) for [Anonymous Symbol]
    delay.o(.text.init_delay) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    delay.o(.text.init_delay) refers to stm32f4xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    delay.o(.text.init_delay) refers to stm32f4xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    delay.o(.ARM.exidx.text.init_delay) refers to delay.o(.text.init_delay) for [Anonymous Symbol]
    delay.o(.text.delay_ms) refers to stm32f4xx_tim.o(.text.TIM_SetCounter) for TIM_SetCounter
    delay.o(.text.delay_ms) refers to stm32f4xx_tim.o(.text.TIM_GetCounter) for TIM_GetCounter
    delay.o(.ARM.exidx.text.delay_ms) refers to delay.o(.text.delay_ms) for [Anonymous Symbol]
    delay.o(.text.delay_us) refers to stm32f4xx_tim.o(.text.TIM_SetCounter) for TIM_SetCounter
    delay.o(.text.delay_us) refers to stm32f4xx_tim.o(.text.TIM_GetCounter) for TIM_GetCounter
    delay.o(.ARM.exidx.text.delay_us) refers to delay.o(.text.delay_us) for [Anonymous Symbol]
    interrupt.o(.text.init_interrupt) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    interrupt.o(.text.init_interrupt) refers to stm32f4xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    interrupt.o(.text.init_interrupt) refers to stm32f4xx_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    interrupt.o(.text.init_interrupt) refers to stm32f4xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    interrupt.o(.text.init_interrupt) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    interrupt.o(.ARM.exidx.text.init_interrupt) refers to interrupt.o(.text.init_interrupt) for [Anonymous Symbol]
    interrupt.o(.text.TIM2_IRQHandler) refers to stm32f4xx_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    interrupt.o(.text.TIM2_IRQHandler) refers to main.o(.bss.theta_1) for theta_1
    interrupt.o(.text.TIM2_IRQHandler) refers to main.o(.bss.theta_2) for theta_2
    interrupt.o(.text.TIM2_IRQHandler) refers to main.o(.bss.theta_3) for theta_3
    interrupt.o(.text.TIM2_IRQHandler) refers to stm32f4xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    interrupt.o(.ARM.exidx.text.TIM2_IRQHandler) refers to interrupt.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    uart.o(.text.init_uart) refers to stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd) for RCC_AHB1PeriphClockCmd
    uart.o(.text.init_uart) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    uart.o(.text.init_uart) refers to stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    uart.o(.text.init_uart) refers to stm32f4xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    uart.o(.text.init_uart) refers to stm32f4xx_usart.o(.text.USART_Init) for USART_Init
    uart.o(.text.init_uart) refers to stm32f4xx_usart.o(.text.USART_Cmd) for USART_Cmd
    uart.o(.ARM.exidx.text.init_uart) refers to uart.o(.text.init_uart) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.stringLength) refers to uart.o(.text.stringLength) for [Anonymous Symbol]
    uart.o(.text.send_data) refers to uart.o(.text.stringLength) for stringLength
    uart.o(.text.send_data) refers to stm32f4xx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    uart.o(.text.send_data) refers to stm32f4xx_usart.o(.text.USART_SendData) for USART_SendData
    uart.o(.ARM.exidx.text.send_data) refers to uart.o(.text.send_data) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig) refers to misc.o(.text.NVIC_PriorityGroupConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_Init) refers to misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.text.GPIO_DeInit) refers to stm32f4xx_rcc.o(.text.RCC_AHB1PeriphResetCmd) for RCC_AHB1PeriphResetCmd
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to stm32f4xx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_Init) refers to stm32f4xx_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to stm32f4xx_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to stm32f4xx_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to stm32f4xx_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to stm32f4xx_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to stm32f4xx_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to stm32f4xx_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to stm32f4xx_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to stm32f4xx_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to stm32f4xx_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_Write) refers to stm32f4xx_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ToggleBits) refers to stm32f4xx_gpio.o(.text.GPIO_ToggleBits) for [Anonymous Symbol]
    stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to stm32f4xx_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to stm32f4xx_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.text.RCC_WaitForHSEStartUp) refers to stm32f4xx_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to stm32f4xx_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to stm32f4xx_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to stm32f4xx_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to stm32f4xx_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to stm32f4xx_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to stm32f4xx_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to stm32f4xx_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to stm32f4xx_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLI2SConfig) refers to stm32f4xx_rcc.o(.text.RCC_PLLI2SConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLI2SCmd) refers to stm32f4xx_rcc.o(.text.RCC_PLLI2SCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLSAIConfig) refers to stm32f4xx_rcc.o(.text.RCC_PLLSAIConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLSAICmd) refers to stm32f4xx_rcc.o(.text.RCC_PLLSAICmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to stm32f4xx_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_MCO1Config) refers to stm32f4xx_rcc.o(.text.RCC_MCO1Config) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_MCO2Config) refers to stm32f4xx_rcc.o(.text.RCC_MCO2Config) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to stm32f4xx_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to stm32f4xx_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to stm32f4xx_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PCLK1Config) refers to stm32f4xx_rcc.o(.text.RCC_PCLK1Config) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PCLK2Config) refers to stm32f4xx_rcc.o(.text.RCC_PCLK2Config) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f4xx_rcc.o(.rodata.APBAHBPrescTable) for APBAHBPrescTable
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to stm32f4xx_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to stm32f4xx_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to stm32f4xx_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to stm32f4xx_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_I2SCLKConfig) refers to stm32f4xx_rcc.o(.text.RCC_I2SCLKConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIPLLI2SClkDivConfig) refers to stm32f4xx_rcc.o(.text.RCC_SAIPLLI2SClkDivConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIPLLSAIClkDivConfig) refers to stm32f4xx_rcc.o(.text.RCC_SAIPLLSAIClkDivConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIBlockACLKConfig) refers to stm32f4xx_rcc.o(.text.RCC_SAIBlockACLKConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIBlockBCLKConfig) refers to stm32f4xx_rcc.o(.text.RCC_SAIBlockBCLKConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_LTDCCLKDivConfig) refers to stm32f4xx_rcc.o(.text.RCC_LTDCCLKDivConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_TIMCLKPresConfig) refers to stm32f4xx_rcc.o(.text.RCC_TIMCLKPresConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB1PeriphClockCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB2PeriphClockCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB2PeriphClockCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB3PeriphClockCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB3PeriphClockCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to stm32f4xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB1PeriphResetCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB1PeriphResetCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB2PeriphResetCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB2PeriphResetCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB3PeriphResetCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB3PeriphResetCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to stm32f4xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB1PeriphClockLPModeCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockLPModeCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB2PeriphClockLPModeCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB2PeriphClockLPModeCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB3PeriphClockLPModeCmd) refers to stm32f4xx_rcc.o(.text.RCC_AHB3PeriphClockLPModeCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockLPModeCmd) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockLPModeCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockLPModeCmd) refers to stm32f4xx_rcc.o(.text.RCC_APB2PeriphClockLPModeCmd) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to stm32f4xx_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to stm32f4xx_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to stm32f4xx_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to stm32f4xx_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f4xx_usart.o(.text.USART_DeInit) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f4xx_usart.o(.text.USART_DeInit) refers to stm32f4xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f4xx_usart.o(.ARM.exidx.text.USART_DeInit) refers to stm32f4xx_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    stm32f4xx_usart.o(.text.USART_Init) refers to stm32f4xx_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f4xx_usart.o(.ARM.exidx.text.USART_Init) refers to stm32f4xx_usart.o(.text.USART_Init) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_StructInit) refers to stm32f4xx_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ClockInit) refers to stm32f4xx_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to stm32f4xx_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_Cmd) refers to stm32f4xx_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to stm32f4xx_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to stm32f4xx_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to stm32f4xx_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SendData) refers to stm32f4xx_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to stm32f4xx_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SetAddress) refers to stm32f4xx_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd) refers to stm32f4xx_usart.o(.text.USART_ReceiverWakeUpCmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_WakeUpConfig) refers to stm32f4xx_usart.o(.text.USART_WakeUpConfig) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to stm32f4xx_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_LINCmd) refers to stm32f4xx_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SendBreak) refers to stm32f4xx_usart.o(.text.USART_SendBreak) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to stm32f4xx_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to stm32f4xx_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to stm32f4xx_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to stm32f4xx_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to stm32f4xx_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to stm32f4xx_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_DMACmd) refers to stm32f4xx_usart.o(.text.USART_DMACmd) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ITConfig) refers to stm32f4xx_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to stm32f4xx_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to stm32f4xx_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to stm32f4xx_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    stm32f4xx_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to stm32f4xx_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_DeInit) refers to stm32f4xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f4xx_tim.o(.text.TIM_DeInit) refers to stm32f4xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_DeInit) refers to stm32f4xx_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to stm32f4xx_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to stm32f4xx_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to stm32f4xx_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to stm32f4xx_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to stm32f4xx_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to stm32f4xx_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to stm32f4xx_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to stm32f4xx_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to stm32f4xx_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to stm32f4xx_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to stm32f4xx_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to stm32f4xx_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to stm32f4xx_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_Cmd) refers to stm32f4xx_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to stm32f4xx_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to stm32f4xx_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to stm32f4xx_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to stm32f4xx_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to stm32f4xx_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to stm32f4xx_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to stm32f4xx_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to stm32f4xx_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to stm32f4xx_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to stm32f4xx_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to stm32f4xx_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to stm32f4xx_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to stm32f4xx_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to stm32f4xx_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to stm32f4xx_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to stm32f4xx_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to stm32f4xx_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to stm32f4xx_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to stm32f4xx_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to stm32f4xx_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to stm32f4xx_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to stm32f4xx_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to stm32f4xx_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to stm32f4xx_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to stm32f4xx_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to stm32f4xx_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to stm32f4xx_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to stm32f4xx_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to stm32f4xx_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TI1_Config) for TI1_Config
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TI2_Config) for TI2_Config
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TI3_Config) for TI3_Config
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TI4_Config) for TI4_Config
    stm32f4xx_tim.o(.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ICInit) refers to stm32f4xx_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TI1_Config) refers to stm32f4xx_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to stm32f4xx_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TI2_Config) refers to stm32f4xx_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to stm32f4xx_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TI3_Config) refers to stm32f4xx_tim.o(.text.TI3_Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to stm32f4xx_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TI4_Config) refers to stm32f4xx_tim.o(.text.TI4_Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to stm32f4xx_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to stm32f4xx_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_PWMIConfig) refers to stm32f4xx_tim.o(.text.TI2_Config) for TI2_Config
    stm32f4xx_tim.o(.text.TIM_PWMIConfig) refers to stm32f4xx_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f4xx_tim.o(.text.TIM_PWMIConfig) refers to stm32f4xx_tim.o(.text.TI1_Config) for TI1_Config
    stm32f4xx_tim.o(.text.TIM_PWMIConfig) refers to stm32f4xx_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to stm32f4xx_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to stm32f4xx_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to stm32f4xx_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to stm32f4xx_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to stm32f4xx_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to stm32f4xx_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to stm32f4xx_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to stm32f4xx_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to stm32f4xx_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to stm32f4xx_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to stm32f4xx_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to stm32f4xx_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to stm32f4xx_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to stm32f4xx_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to stm32f4xx_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to stm32f4xx_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to stm32f4xx_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to stm32f4xx_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to stm32f4xx_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to stm32f4xx_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_ITRxExternalClockConfig) refers to stm32f4xx_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to stm32f4xx_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to stm32f4xx_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f4xx_tim.o(.text.TI2_Config) for TI2_Config
    stm32f4xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f4xx_tim.o(.text.TI1_Config) for TI1_Config
    stm32f4xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f4xx_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to stm32f4xx_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_ETRClockMode1Config) refers to stm32f4xx_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to stm32f4xx_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to stm32f4xx_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.text.TIM_ETRClockMode2Config) refers to stm32f4xx_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to stm32f4xx_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to stm32f4xx_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to stm32f4xx_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to stm32f4xx_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to stm32f4xx_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to stm32f4xx_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    stm32f4xx_tim.o(.ARM.exidx.text.TIM_RemapConfig) refers to stm32f4xx_tim.o(.text.TIM_RemapConfig) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.data.irqRtxLibRef) refers to irq_cm4f.o(.constdata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm4f.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm4f.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm4f.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f40_41xxx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.control_theta_1), (8 bytes).
    Removing main.o(.ARM.exidx.text.control_theta_2), (8 bytes).
    Removing main.o(.ARM.exidx.text.control_theta_3), (8 bytes).
    Removing main.o(.bss.denta_1), (4 bytes).
    Removing main.o(.bss.denta_2), (4 bytes).
    Removing main.o(.bss.denta_3), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.init_gpio), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.step), (8 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.ARM.exidx.text.init_delay), (8 bytes).
    Removing delay.o(.text.delay_ms), (46 bytes).
    Removing delay.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_us), (8 bytes).
    Removing interrupt.o(.text), (0 bytes).
    Removing interrupt.o(.ARM.exidx.text.init_interrupt), (8 bytes).
    Removing interrupt.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.init_uart), (8 bytes).
    Removing uart.o(.text.stringLength), (16 bytes).
    Removing uart.o(.ARM.exidx.text.stringLength), (8 bytes).
    Removing uart.o(.text.send_data), (62 bytes).
    Removing uart.o(.ARM.exidx.text.send_data), (8 bytes).
    Removing misc.o(.text), (0 bytes).
    Removing misc.o(.text.NVIC_PriorityGroupConfig), (20 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig), (8 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing misc.o(.text.NVIC_SetVectorTable), (24 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing misc.o(.text.NVIC_SystemLPConfig), (24 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing misc.o(.text.SysTick_CLKSourceConfig), (26 bytes).
    Removing misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_DeInit), (92 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_StructInit), (12 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_PinLockConfig), (36 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_ReadInputDataBit), (10 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_ReadInputData), (6 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_ReadOutputData), (6 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_WriteBit), (10 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing stm32f4xx_gpio.o(.text.GPIO_ToggleBits), (8 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_ToggleBits), (8 bytes).
    Removing stm32f4xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_DeInit), (80 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_HSEConfig), (16 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_WaitForHSEStartUp), (48 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_GetFlagStatus), (42 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AdjustHSICalibrationValue), (22 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_HSICmd), (10 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_LSEConfig), (30 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_LSICmd), (12 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PLLConfig), (46 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PLLCmd), (10 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PLLI2SConfig), (18 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLI2SConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PLLI2SCmd), (10 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLI2SCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PLLSAIConfig), (22 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLSAIConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PLLSAICmd), (10 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PLLSAICmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_ClockSecuritySystemCmd), (10 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_MCO1Config), (22 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_MCO1Config), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_MCO2Config), (22 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_MCO2Config), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PCLK1Config), (20 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PCLK1Config), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_PCLK2Config), (22 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_PCLK2Config), (8 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_RTCCLKConfig), (50 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_I2SCLKConfig), (12 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_I2SCLKConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_SAIPLLI2SClkDivConfig), (22 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIPLLI2SClkDivConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_SAIPLLSAIClkDivConfig), (28 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIPLLSAIClkDivConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_SAIBlockACLKConfig), (20 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIBlockACLKConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_SAIBlockBCLKConfig), (20 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_SAIBlockBCLKConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_LTDCCLKDivConfig), (20 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_LTDCCLKDivConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_TIMCLKPresConfig), (12 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_TIMCLKPresConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB1PeriphClockCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB2PeriphClockCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB2PeriphClockCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB3PeriphClockCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB3PeriphClockCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_APB2PeriphClockCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB1PeriphResetCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB1PeriphResetCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB2PeriphResetCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB2PeriphResetCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB3PeriphResetCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB3PeriphResetCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_APB1PeriphResetCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_APB2PeriphResetCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockLPModeCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB1PeriphClockLPModeCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB2PeriphClockLPModeCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB2PeriphClockLPModeCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_AHB3PeriphClockLPModeCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_AHB3PeriphClockLPModeCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockLPModeCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockLPModeCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_APB2PeriphClockLPModeCmd), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockLPModeCmd), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_ITConfig), (24 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_ClearFlag), (18 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_GetITStatus), (18 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing stm32f4xx_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f4xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing stm32f4xx_usart.o(.text), (0 bytes).
    Removing stm32f4xx_usart.o(.text.USART_DeInit), (274 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_StructInit), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ClockInit), (34 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ClockStructInit), (8 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SetPrescaler), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_OverSampling8Cmd), (20 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_OneBitMethodCmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SendData), (8 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ReceiveData), (8 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SetAddress), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ReceiverWakeUpCmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_WakeUpConfig), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_WakeUpConfig), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_LINCmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SendBreak), (10 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SendBreak), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_HalfDuplexCmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SmartCardCmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_SmartCardNACKCmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_IrDAConfig), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_IrDACmd), (18 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_DMACmd), (16 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_DMACmd), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ITConfig), (46 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_GetFlagStatus), (10 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ClearFlag), (6 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_GetITStatus), (58 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing stm32f4xx_usart.o(.text.USART_ClearITPendingBit), (14 bytes).
    Removing stm32f4xx_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing stm32f4xx_tim.o(.text), (0 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_DeInit), (432 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_TimeBaseStructInit), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_CounterModeConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GetPrescaler), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_UpdateDisableConfig), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_UpdateRequestConfig), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ARRPreloadConfig), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectOnePulseMode), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetClockDivision), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC1Init), (108 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC2Init), (114 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC3Init), (114 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC4Init), (84 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OCStructInit), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectOCxM), (88 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetCompare4), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ForcedOC1Config), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ForcedOC2Config), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ForcedOC3Config), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ForcedOC4Config), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC1PreloadConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC2PreloadConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC3PreloadConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC4PreloadConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC1FastConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC2FastConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC3FastConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC4FastConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ClearOC1Ref), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ClearOC2Ref), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ClearOC3Ref), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ClearOC4Ref), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC1PolarityConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC1NPolarityConfig), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC2PolarityConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC2NPolarityConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC3PolarityConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC3NPolarityConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_OC4PolarityConfig), (14 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_CCxCmd), (32 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_CCxNCmd), (32 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ICInit), (98 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TI1_Config), (50 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetIC1Prescaler), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TI2_Config), (56 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetIC2Prescaler), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TI3_Config), (52 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TI3_Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetIC3Prescaler), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TI4_Config), (60 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TI4_Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SetIC4Prescaler), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ICStructInit), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_PWMIConfig), (112 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GetCapture4), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_BDTRConfig), (40 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_BDTRStructInit), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_CtrlPWMOutputs), (24 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectCOM), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_CCPreloadControl), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ClearFlag), (6 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_DMACmd), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectCCDMA), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_InternalClockConfig), (10 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ITRxExternalClockConfig), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectInputTrigger), (12 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_TIxExternalClockConfig), (44 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ETRClockMode1Config), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ETRConfig), (22 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_ETRClockMode2Config), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectOutputTrigger), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectSlaveMode), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectMasterSlaveMode), (16 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_EncoderInterfaceConfig), (48 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_SelectHallSensor), (18 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing stm32f4xx_tim.o(.text.TIM_RemapConfig), (6 bytes).
    Removing stm32f4xx_tim.o(.ARM.exidx.text.TIM_RemapConfig), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (86 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (140 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_cm4f.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (328 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (168 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).

721 unused section(s) (total 14017 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm4f.s           0x00000000   Number         0  irq_cm4f.o ABSOLUTE
    Core/Src/startup_stm32f40_41xxx.s        0x00000000   Number         0  startup_stm32f40_41xxx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    misc.c                                   0x00000000   Number         0  misc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f4xx_gpio.c                         0x00000000   Number         0  stm32f4xx_gpio.o ABSOLUTE
    stm32f4xx_rcc.c                          0x00000000   Number         0  stm32f4xx_rcc.o ABSOLUTE
    stm32f4xx_tim.c                          0x00000000   Number         0  stm32f4xx_tim.o ABSOLUTE
    stm32f4xx_usart.c                        0x00000000   Number         0  stm32f4xx_usart.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x08000000   Section      392  startup_stm32f40_41xxx.o(RESET)
    !!!main                                  0x08000188   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000190   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001c4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001e0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001fc   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x080001fe   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000202   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000204   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000206   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000208   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000208   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000208   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800020e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000216   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800021a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000222   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000224   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000224   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000228   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x08000230   Number         0  startup_stm32f40_41xxx.o(.text)
    .text                                    0x08000230   Section       64  startup_stm32f40_41xxx.o(.text)
    $v0                                      0x08000270   Number         0  irq_cm4f.o(.text)
    .text                                    0x08000270   Section      196  irq_cm4f.o(.text)
    .text                                    0x08000334   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080003be   Section       68  rt_memclr.o(.text)
    .text                                    0x08000402   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000450   Section        0  heapauxi.o(.text)
    .text                                    0x08000456   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080004ba   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000504   Section        0  exit.o(.text)
    .text                                    0x08000518   Section        8  libspace.o(.text)
    .text                                    0x08000520   Section        0  sys_exit.o(.text)
    .text                                    0x0800052c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800052e   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000530   Section        0  stm32f4xx_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x080005b8   Section        0  stm32f4xx_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x080005e0   Section        0  stm32f4xx_gpio.o(.text.GPIO_ResetBits)
    [Anonymous Symbol]                       0x080005e4   Section        0  stm32f4xx_gpio.o(.text.GPIO_SetBits)
    MessageQueueGet                          0x080005e9   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x080005e8   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x08000629   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08000628   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08000681   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08000680   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0800069c   Section        0  misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x08000700   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08000708   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x08000728   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0800072c   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08000734   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08000764   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08000768   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x0800076c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08000770   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08000774   Section        0  stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd)
    [Anonymous Symbol]                       0x0800078c   Section        0  stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x080007a4   Section        0  stm32f4xx_rcc.o(.text.RCC_GetClocksFreq)
    SetSysClock                              0x0800083d   Thumb Code   190  system_stm32f4xx.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x0800083c   Section        0  system_stm32f4xx.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x080008fc   Section        0  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x0800097c   Section        0  system_stm32f4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080009d4   Section        0  interrupt.o(.text.TIM2_IRQHandler)
    [Anonymous Symbol]                       0x08000a1c   Section        0  stm32f4xx_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x08000a24   Section        0  stm32f4xx_tim.o(.text.TIM_Cmd)
    [Anonymous Symbol]                       0x08000a38   Section        0  stm32f4xx_tim.o(.text.TIM_GetCounter)
    [Anonymous Symbol]                       0x08000a3c   Section        0  stm32f4xx_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x08000a50   Section        0  stm32f4xx_tim.o(.text.TIM_ITConfig)
    [Anonymous Symbol]                       0x08000a60   Section        0  stm32f4xx_tim.o(.text.TIM_SetCounter)
    [Anonymous Symbol]                       0x08000a64   Section        0  stm32f4xx_tim.o(.text.TIM_TimeBaseInit)
    ThreadFlagsCheck                         0x08000af7   Thumb Code   110  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08000af6   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x08000b65   Thumb Code    72  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08000b64   Section        0  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x08000ba8   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08000bac   Section        0  stm32f4xx_usart.o(.text.USART_Cmd)
    [Anonymous Symbol]                       0x08000bc0   Section        0  stm32f4xx_usart.o(.text.USART_Init)
    __tagsym$$used.1                         0x08000c78   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08000c78   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08000c94   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08000c94   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08000ca0   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08000ca0   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08000cc0   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000cc0   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000cd8   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    control_theta_1                          0x08000ce1   Thumb Code   106  main.o(.text.control_theta_1)
    [Anonymous Symbol]                       0x08000ce0   Section        0  main.o(.text.control_theta_1)
    control_theta_2                          0x08000d4d   Thumb Code   106  main.o(.text.control_theta_2)
    [Anonymous Symbol]                       0x08000d4c   Section        0  main.o(.text.control_theta_2)
    control_theta_3                          0x08000db9   Thumb Code   106  main.o(.text.control_theta_3)
    [Anonymous Symbol]                       0x08000db8   Section        0  main.o(.text.control_theta_3)
    [Anonymous Symbol]                       0x08000e24   Section        0  delay.o(.text.delay_us)
    [Anonymous Symbol]                       0x08000e50   Section        0  delay.o(.text.init_delay)
    [Anonymous Symbol]                       0x08000e84   Section        0  gpio.o(.text.init_gpio)
    [Anonymous Symbol]                       0x08000eb0   Section        0  interrupt.o(.text.init_interrupt)
    [Anonymous Symbol]                       0x08000f08   Section        0  uart.o(.text.init_uart)
    [Anonymous Symbol]                       0x08000f8c   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08000fdc   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x08001004   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x08001008   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0800100c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x08001034   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08001038   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x08001058   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x0800105c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x080010c4   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x080010c8   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x080010e8   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x080010ec   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x08001160   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08001164   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x08001184   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08001188   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x080011a8   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x080011ac   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x080011cc   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080011d0   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x080011f0   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x080011f4   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x080011f8   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x080011fa   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x080011fc   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800126c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080012b2   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080012ee   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08001328   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08001372   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x080013a9   Thumb Code   186  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080013a8   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08001462   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x080014aa   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x080014ec   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08001574   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x080015e0   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x080015e5   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x080015e4   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08001619   Thumb Code   112  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08001618   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x08001689   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08001688   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x080016c0   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08001708   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x0800175d   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0800175c   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x080017b0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x080017c2   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x080017ee   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x08001803   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08001802   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x0800180e   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08001835   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001834   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800185c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x0800186c   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08001880   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_0                             0x080018a0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_1                             0x080018a4   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080018a8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_1                            0x080018d8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_3                            0x080018dc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x080018e0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x080018ec   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.14_0                            0x08001920   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08001924   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001958   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x080019c4   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x080019c8   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x080019f8   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x080019fc   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08001a01   Thumb Code    84  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08001a00   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08001a50   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08001a54   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.32_0                            0x08001a5c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08001a60   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.18_0                            0x08001a80   Number         4  rtx_thread.o(.text.osThreadNew)
    os_kernel_is_active                      0x08001a85   Thumb Code    30  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08001a84   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08001aa4   Section        0  gpio.o(.text.step)
    svcRtxKernelGetState                     0x08001ae9   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08001ae8   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x08001af0   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x08001af5   Thumb Code   336  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08001af4   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x08001c38   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x08001c3c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x08001c40   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08001c45   Thumb Code   136  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001c44   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x08001cbc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x08001cc0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x08001cc4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x08001cc8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08001ccd   Thumb Code   224  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001ccc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x08001da8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08001dad   Thumb Code   304  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08001dac   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x08001ed4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x08001ed8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08001edd   Thumb Code   188  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001edc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08001f99   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08001f98   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x08002028   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800202d   Thumb Code   172  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x0800202c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x080020d9   Thumb Code   104  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x080020d8   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x0800213c   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08002141   Thumb Code   180  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08002140   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x080021f0   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x080021f5   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x080021f4   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.55_0                            0x08002258   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x0800225d   Thumb Code   464  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x0800225c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_0                            0x08002418   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_1                            0x0800241c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_2                            0x08002420   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_3                            0x08002424   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_4                            0x08002428   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    $v0                                      0x0800242c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0800242c   Section       26  fpinit.o(x$fpl$fpinit)
    __tagsym$$used.4                         0x08002448   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x080024b0   Number         0  rtx_lib.o(.rodata)
    APBAHBPrescTable                         0x080024f8   Data          16  stm32f4xx_rcc.o(.rodata.APBAHBPrescTable)
    [Anonymous Symbol]                       0x080024f8   Section        0  stm32f4xx_rcc.o(.rodata.APBAHBPrescTable)
    os_idle_thread_attr                      0x0800250c   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x0800250c   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08002530   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08002530   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08002548   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08002548   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x0800256c   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x0800256c   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss                                     0x200000a8   Section       96  libspace.o(.bss)
    PendST                                   0x20000108   Data           1  os_systick.o(.bss.PendST)
    [Anonymous Symbol]                       0x20000108   Section        0  os_systick.o(.bss.PendST)
    os_isr_queue                             0x20000118   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000118   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000158   Data       32768  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0x20008158   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20008158   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x2000818c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x2000818c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200081dc   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200081dc   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008220   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20008268   Data         512  rtx_lib.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x20008268   Section        0  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20008468   Data         512  rtx_lib.o(.bss.os.thread.stack)
    os_kernel_is_active.os_kernel_active     0x20008668   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20008668   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x20008678   Data         512  startup_stm32f40_41xxx.o(HEAP)
    HEAP                                     0x20008678   Section      512  startup_stm32f40_41xxx.o(HEAP)
    Stack_Mem                                0x20008878   Data        1024  startup_stm32f40_41xxx.o(STACK)
    STACK                                    0x20008878   Section     1024  startup_stm32f40_41xxx.o(STACK)
    __initial_sp                             0x20008c78   Data           0  startup_stm32f40_41xxx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000188   Number         0  startup_stm32f40_41xxx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f40_41xxx.o(RESET)
    __Vectors_End                            0x08000188   Data           0  startup_stm32f40_41xxx.o(RESET)
    __main                                   0x08000189   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000191   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0800019f   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001c5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001e1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001fd   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000205   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000209   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000209   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000209   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800020f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000217   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000223   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000225   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000225   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000229   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000231   Thumb Code     8  startup_stm32f40_41xxx.o(.text)
    NMI_Handler                              0x08000239   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    HardFault_Handler                        0x0800023b   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    MemManage_Handler                        0x0800023d   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    BusFault_Handler                         0x0800023f   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    UsageFault_Handler                       0x08000241   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    DebugMon_Handler                         0x08000245   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    ADC_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_RX0_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_RX1_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_SCE_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_TX_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_RX0_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_RX1_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_SCE_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_TX_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CRYP_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DCMI_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream0_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream1_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream2_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream3_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream4_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream5_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream6_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream7_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream0_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream1_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream2_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream3_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream4_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream5_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream6_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream7_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    ETH_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    ETH_WKUP_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI0_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI15_10_IRQHandler                     0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI1_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI2_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI3_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI4_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI9_5_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    FLASH_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    FPU_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    FSMC_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    HASH_RNG_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C1_ER_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C1_EV_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C2_ER_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C2_EV_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C3_ER_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C3_EV_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_FS_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    PVD_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    RCC_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    RTC_Alarm_IRQHandler                     0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    RTC_WKUP_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SDIO_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SPI1_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SPI2_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SPI3_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TAMP_STAMP_IRQHandler                    0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_CC_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM3_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM4_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM5_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM6_DAC_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM7_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_CC_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    UART4_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    UART5_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART1_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART2_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART3_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART6_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    WWDG_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    __user_initial_stackheap                 0x0800024d   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SVC_Handler                              0x08000271   Thumb Code   152  irq_cm4f.o(.text)
    PendSV_Handler                           0x08000309   Thumb Code    16  irq_cm4f.o(.text)
    SysTick_Handler                          0x08000319   Thumb Code    16  irq_cm4f.o(.text)
    __aeabi_memcpy                           0x08000335   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000335   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0800039b   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x080003bf   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080003bf   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x080003c3   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000403   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000403   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000403   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x08000407   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x08000451   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000453   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000455   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000457   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000457   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000457   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800049f   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x080004bb   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000505   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000519   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000519   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000521   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0800052d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800052d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800052f   Thumb Code     0  indicate_semi.o(.text)
    GPIO_Init                                0x08000531   Thumb Code   134  stm32f4xx_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x080005b9   Thumb Code    40  stm32f4xx_gpio.o(.text.GPIO_PinAFConfig)
    GPIO_ResetBits                           0x080005e1   Thumb Code     4  stm32f4xx_gpio.o(.text.GPIO_ResetBits)
    GPIO_SetBits                             0x080005e5   Thumb Code     4  stm32f4xx_gpio.o(.text.GPIO_SetBits)
    NVIC_Init                                0x0800069d   Thumb Code    98  misc.o(.text.NVIC_Init)
    OS_Tick_AcknowledgeIRQ                   0x08000701   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08000709   Thumb Code    36  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0800072d   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08000735   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    RCC_AHB1PeriphClockCmd                   0x08000775   Thumb Code    24  stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x0800078d   Thumb Code    24  stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_GetClocksFreq                        0x080007a5   Thumb Code   150  stm32f4xx_rcc.o(.text.RCC_GetClocksFreq)
    SystemCoreClockUpdate                    0x080008fd   Thumb Code   126  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x0800097d   Thumb Code    86  system_stm32f4xx.o(.text.SystemInit)
    TIM2_IRQHandler                          0x080009d5   Thumb Code    70  interrupt.o(.text.TIM2_IRQHandler)
    TIM_ClearITPendingBit                    0x08000a1d   Thumb Code     6  stm32f4xx_tim.o(.text.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x08000a25   Thumb Code    18  stm32f4xx_tim.o(.text.TIM_Cmd)
    TIM_GetCounter                           0x08000a39   Thumb Code     4  stm32f4xx_tim.o(.text.TIM_GetCounter)
    TIM_GetITStatus                          0x08000a3d   Thumb Code    20  stm32f4xx_tim.o(.text.TIM_GetITStatus)
    TIM_ITConfig                             0x08000a51   Thumb Code    16  stm32f4xx_tim.o(.text.TIM_ITConfig)
    TIM_SetCounter                           0x08000a61   Thumb Code     4  stm32f4xx_tim.o(.text.TIM_SetCounter)
    TIM_TimeBaseInit                         0x08000a65   Thumb Code   146  stm32f4xx_tim.o(.text.TIM_TimeBaseInit)
    USART_Cmd                                0x08000bad   Thumb Code    18  stm32f4xx_usart.o(.text.USART_Cmd)
    USART_Init                               0x08000bc1   Thumb Code   182  stm32f4xx_usart.o(.text.USART_Init)
    _mutex_acquire                           0x08000c79   Thumb Code    26  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08000c95   Thumb Code    10  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08000ca1   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x08000cc1   Thumb Code    22  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08000cd9   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    delay_us                                 0x08000e25   Thumb Code    44  delay.o(.text.delay_us)
    init_delay                               0x08000e51   Thumb Code    50  delay.o(.text.init_delay)
    init_gpio                                0x08000e85   Thumb Code    42  gpio.o(.text.init_gpio)
    init_interrupt                           0x08000eb1   Thumb Code    88  interrupt.o(.text.init_interrupt)
    init_uart                                0x08000f09   Thumb Code   132  uart.o(.text.init_uart)
    main                                     0x08000f8d   Thumb Code    78  main.o(.text.main)
    osKernelGetState                         0x08000fdd   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x0800100d   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08001039   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x0800105d   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x080010c9   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x080010ed   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08001165   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08001189   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x080011ad   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080011d1   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x080011f5   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x080011f9   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelPreInit                       0x080011fb   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x080011fd   Thumb Code   112  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800126d   Thumb Code    70  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080012b3   Thumb Code    60  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080012ef   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08001329   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08001373   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08001463   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x080014ab   Thumb Code    66  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x080014ed   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08001575   Thumb Code   112  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x080016c1   Thumb Code    72  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08001709   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x080017b1   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x080017c3   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x080017ef   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0800180f   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x0800185d   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x0800186d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08001881   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x080018a9   Thumb Code    56  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x080018e1   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x080018ed   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001925   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001959   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x080019c9   Thumb Code    56  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08001a55   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08001a61   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    step                                     0x08001aa5   Thumb Code    66  gpio.o(.text.step)
    _fp_init                                 0x0800242d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08002445   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08002445   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxConfig                              0x08002448   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x080024b0   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080024e8   Data          16  system_stm32f4xx.o(.rodata.AHBPrescTable)
    osRtxUserSVC                             0x08002508   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08002578   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002598   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000004   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x200000a8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000108   Data           0  libspace.o(.bss)
    last_theta_1                             0x2000010c   Data           4  main.o(.bss.last_theta_1)
    last_theta_2                             0x20000110   Data           4  main.o(.bss.last_theta_2)
    last_theta_3                             0x20000114   Data           4  main.o(.bss.last_theta_3)
    .bss.os.msgqueue.cb$$Base                0x20008158   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x2000818c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200081dc   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20008264   Number         0  rtx_lib.o(.bss.os.thread.cb)
    theta_1                                  0x2000866c   Data           4  main.o(.bss.theta_1)
    theta_2                                  0x20008670   Data           4  main.o(.bss.theta_2)
    theta_3                                  0x20008674   Data           4  main.o(.bss.theta_3)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000231

  Load Region LR_1 (Base: 0x08000000, Size: 0x00002640, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002598, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000188   Data   RO            3    RESET               startup_stm32f40_41xxx.o
    0x08000188   0x08000188   0x00000008   Code   RO         1036  * !!!main             c_w.l(__main.o)
    0x08000190   0x08000190   0x00000034   Code   RO         1199    !!!scatter          c_w.l(__scatter.o)
    0x080001c4   0x080001c4   0x0000001a   Code   RO         1201    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001de   0x080001de   0x00000002   PAD
    0x080001e0   0x080001e0   0x0000001c   Code   RO         1203    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001fc   0x080001fc   0x00000002   Code   RO         1063    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001fe   0x080001fe   0x00000004   Code   RO         1069    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1072    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1075    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1077    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1079    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1082    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1084    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1086    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1088    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1090    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1092    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1094    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1096    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1098    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1100    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1102    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1106    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1108    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1110    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1112    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000002   Code   RO         1113    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000204   0x08000204   0x00000002   Code   RO         1135    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1150    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1152    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1155    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1158    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1160    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1163    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000002   Code   RO         1164    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000208   0x08000208   0x00000000   Code   RO         1038    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000208   0x08000208   0x00000000   Code   RO         1042    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000208   0x08000208   0x00000006   Code   RO         1054    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800020e   0x0800020e   0x00000008   Code   RO         1043    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000216   0x08000216   0x00000004   Code   RO         1045    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800021a   0x0800021a   0x00000000   Code   RO         1047    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO         1048    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000002   Code   RO         1067    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000224   0x08000224   0x00000000   Code   RO         1115    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000224   0x08000224   0x00000004   Code   RO         1116    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000228   0x08000228   0x00000006   Code   RO         1117    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800022e   0x0800022e   0x00000002   PAD
    0x08000230   0x08000230   0x00000040   Code   RO            4  * .text               startup_stm32f40_41xxx.o
    0x08000270   0x08000270   0x000000c4   Code   RO          813    .text               RTX_CM4F.lib(irq_cm4f.o)
    0x08000334   0x08000334   0x0000008a   Code   RO         1028    .text               c_w.l(rt_memcpy_v6.o)
    0x080003be   0x080003be   0x00000044   Code   RO         1030    .text               c_w.l(rt_memclr.o)
    0x08000402   0x08000402   0x0000004e   Code   RO         1032    .text               c_w.l(rt_memclr_w.o)
    0x08000450   0x08000450   0x00000006   Code   RO         1034    .text               c_w.l(heapauxi.o)
    0x08000456   0x08000456   0x00000064   Code   RO         1039    .text               c_w.l(rt_memcpy_w.o)
    0x080004ba   0x080004ba   0x0000004a   Code   RO         1056    .text               c_w.l(sys_stackheap_outer.o)
    0x08000504   0x08000504   0x00000012   Code   RO         1058    .text               c_w.l(exit.o)
    0x08000516   0x08000516   0x00000002   PAD
    0x08000518   0x08000518   0x00000008   Code   RO         1064    .text               c_w.l(libspace.o)
    0x08000520   0x08000520   0x0000000c   Code   RO         1125    .text               c_w.l(sys_exit.o)
    0x0800052c   0x0800052c   0x00000002   Code   RO         1140    .text               c_w.l(use_no_semi.o)
    0x0800052e   0x0800052e   0x00000000   Code   RO         1142    .text               c_w.l(indicate_semi.o)
    0x0800052e   0x0800052e   0x00000002   PAD
    0x08000530   0x08000530   0x00000086   Code   RO          124    .text.GPIO_Init     stm32f4xx_gpio.o
    0x080005b6   0x080005b6   0x00000002   PAD
    0x080005b8   0x080005b8   0x00000028   Code   RO          148    .text.GPIO_PinAFConfig  stm32f4xx_gpio.o
    0x080005e0   0x080005e0   0x00000004   Code   RO          140    .text.GPIO_ResetBits  stm32f4xx_gpio.o
    0x080005e4   0x080005e4   0x00000004   Code   RO          138    .text.GPIO_SetBits  stm32f4xx_gpio.o
    0x080005e8   0x080005e8   0x00000040   Code   RO         1010    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000628   0x08000628   0x00000058   Code   RO         1004    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000680   0x08000680   0x0000001c   Code   RO         1002    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0800069c   0x0800069c   0x00000062   Code   RO          106    .text.NVIC_Init     misc.o
    0x080006fe   0x080006fe   0x00000002   PAD
    0x08000700   0x08000700   0x00000008   Code   RO          948    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x08000708   0x08000708   0x00000024   Code   RO          944    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x0800072c   0x0800072c   0x00000006   Code   RO          950    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x08000732   0x08000732   0x00000002   PAD
    0x08000734   0x08000734   0x00000040   Code   RO          942    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x08000774   0x08000774   0x00000018   Code   RO          224    .text.RCC_AHB1PeriphClockCmd  stm32f4xx_rcc.o
    0x0800078c   0x0800078c   0x00000018   Code   RO          230    .text.RCC_APB1PeriphClockCmd  stm32f4xx_rcc.o
    0x080007a4   0x080007a4   0x00000096   Code   RO          202    .text.RCC_GetClocksFreq  stm32f4xx_rcc.o
    0x0800083a   0x0800083a   0x00000002   PAD
    0x0800083c   0x0800083c   0x000000be   Code   RO           13    .text.SetSysClock   system_stm32f4xx.o
    0x080008fa   0x080008fa   0x00000002   PAD
    0x080008fc   0x080008fc   0x0000007e   Code   RO           15    .text.SystemCoreClockUpdate  system_stm32f4xx.o
    0x0800097a   0x0800097a   0x00000002   PAD
    0x0800097c   0x0800097c   0x00000056   Code   RO           11    .text.SystemInit    system_stm32f4xx.o
    0x080009d2   0x080009d2   0x00000002   PAD
    0x080009d4   0x080009d4   0x00000046   Code   RO           81    .text.TIM2_IRQHandler  interrupt.o
    0x08000a1a   0x08000a1a   0x00000002   PAD
    0x08000a1c   0x08000a1c   0x00000006   Code   RO          487    .text.TIM_ClearITPendingBit  stm32f4xx_tim.o
    0x08000a22   0x08000a22   0x00000002   PAD
    0x08000a24   0x08000a24   0x00000012   Code   RO          365    .text.TIM_Cmd       stm32f4xx_tim.o
    0x08000a36   0x08000a36   0x00000002   PAD
    0x08000a38   0x08000a38   0x00000004   Code   RO          351    .text.TIM_GetCounter  stm32f4xx_tim.o
    0x08000a3c   0x08000a3c   0x00000014   Code   RO          485    .text.TIM_GetITStatus  stm32f4xx_tim.o
    0x08000a50   0x08000a50   0x00000010   Code   RO          477    .text.TIM_ITConfig  stm32f4xx_tim.o
    0x08000a60   0x08000a60   0x00000004   Code   RO          347    .text.TIM_SetCounter  stm32f4xx_tim.o
    0x08000a64   0x08000a64   0x00000092   Code   RO          339    .text.TIM_TimeBaseInit  stm32f4xx_tim.o
    0x08000af6   0x08000af6   0x0000006e   Code   RO          723    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x08000b64   0x08000b64   0x00000048   Code   RO          834    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x08000bac   0x08000bac   0x00000012   Code   RO          281    .text.USART_Cmd     stm32f4xx_usart.o
    0x08000bbe   0x08000bbe   0x00000002   PAD
    0x08000bc0   0x08000bc0   0x000000b6   Code   RO          273    .text.USART_Init    stm32f4xx_usart.o
    0x08000c76   0x08000c76   0x00000002   PAD
    0x08000c78   0x08000c78   0x0000001a   Code   RO          537    .text._mutex_acquire  rtx_lib.o
    0x08000c92   0x08000c92   0x00000002   PAD
    0x08000c94   0x08000c94   0x0000000a   Code   RO          541    .text._mutex_free   rtx_lib.o
    0x08000c9e   0x08000c9e   0x00000002   PAD
    0x08000ca0   0x08000ca0   0x00000020   Code   RO          535    .text._mutex_initialize  rtx_lib.o
    0x08000cc0   0x08000cc0   0x00000016   Code   RO          539    .text._mutex_release  rtx_lib.o
    0x08000cd6   0x08000cd6   0x00000002   PAD
    0x08000cd8   0x08000cd8   0x00000008   Code   RO          529    .text._platform_post_stackheap_init  rtx_lib.o
    0x08000ce0   0x08000ce0   0x0000006a   Code   RO           29    .text.control_theta_1  main.o
    0x08000d4a   0x08000d4a   0x00000002   PAD
    0x08000d4c   0x08000d4c   0x0000006a   Code   RO           31    .text.control_theta_2  main.o
    0x08000db6   0x08000db6   0x00000002   PAD
    0x08000db8   0x08000db8   0x0000006a   Code   RO           33    .text.control_theta_3  main.o
    0x08000e22   0x08000e22   0x00000002   PAD
    0x08000e24   0x08000e24   0x0000002c   Code   RO           69    .text.delay_us      delay.o
    0x08000e50   0x08000e50   0x00000032   Code   RO           65    .text.init_delay    delay.o
    0x08000e82   0x08000e82   0x00000002   PAD
    0x08000e84   0x08000e84   0x0000002a   Code   RO           53    .text.init_gpio     gpio.o
    0x08000eae   0x08000eae   0x00000002   PAD
    0x08000eb0   0x08000eb0   0x00000058   Code   RO           79    .text.init_interrupt  interrupt.o
    0x08000f08   0x08000f08   0x00000084   Code   RO           90    .text.init_uart     uart.o
    0x08000f8c   0x08000f8c   0x0000004e   Code   RO           27    .text.main          main.o
    0x08000fda   0x08000fda   0x00000002   PAD
    0x08000fdc   0x08000fdc   0x00000030   Code   RO          584    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x0800100c   0x0800100c   0x0000002c   Code   RO          578    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08001038   0x08001038   0x00000024   Code   RO          588    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x0800105c   0x0800105c   0x0000006c   Code   RO          976    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080010c8   0x080010c8   0x00000024   Code   RO          970    .text.osMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080010ec   0x080010ec   0x00000078   Code   RO          974    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001164   0x08001164   0x00000024   Code   RO          784    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08001188   0x08001188   0x00000024   Code   RO          790    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x080011ac   0x080011ac   0x00000024   Code   RO          780    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x080011d0   0x080011d0   0x00000024   Code   RO          786    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x080011f4   0x080011f4   0x00000002   Code   RO          566    .text.osRtxErrorNotify  rtx_config.o
    0x080011f6   0x080011f6   0x00000002   PAD
    0x080011f8   0x080011f8   0x00000002   Code   RO          564    .text.osRtxIdleThread  rtx_config.o
    0x080011fa   0x080011fa   0x00000002   Code   RO          576    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x080011fc   0x080011fc   0x00000070   Code   RO          861    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x0800126c   0x0800126c   0x00000046   Code   RO          863    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x080012b2   0x080012b2   0x0000003c   Code   RO          859    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x080012ee   0x080012ee   0x0000003a   Code   RO          876    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x08001328   0x08001328   0x0000004a   Code   RO          878    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x08001372   0x08001372   0x00000036   Code   RO          874    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x080013a8   0x080013a8   0x000000ba   Code   RO         1000    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001462   0x08001462   0x00000048   Code   RO          776    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x080014aa   0x080014aa   0x00000042   Code   RO          778    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x080014ec   0x080014ec   0x00000088   Code   RO          929    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08001574   0x08001574   0x00000070   Code   RO          931    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x080015e4   0x080015e4   0x00000034   Code   RO          663    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x08001618   0x08001618   0x00000070   Code   RO          671    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x08001688   0x08001688   0x00000038   Code   RO          667    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x080016c0   0x080016c0   0x00000048   Code   RO          651    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x08001708   0x08001708   0x00000054   Code   RO          661    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x0800175c   0x0800175c   0x00000054   Code   RO          747    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x080017b0   0x080017b0   0x00000012   Code   RO          643    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x080017c2   0x080017c2   0x0000002c   Code   RO          641    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x080017ee   0x080017ee   0x00000014   Code   RO          647    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08001802   0x08001802   0x0000000c   Code   RO          653    .text.osRtxThreadListRoot  RTX_CM4F.lib(rtx_thread.o)
    0x0800180e   0x0800180e   0x00000026   Code   RO          645    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x08001834   0x08001834   0x00000028   Code   RO          721    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x0800185c   0x0800185c   0x00000010   Code   RO          649    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x0800186c   0x0800186c   0x00000014   Code   RO          655    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x08001880   0x08001880   0x00000028   Code   RO          659    .text.osRtxThreadStackCheck  RTX_CM4F.lib(rtx_thread.o)
    0x080018a8   0x080018a8   0x00000038   Code   RO          673    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x080018e0   0x080018e0   0x0000000c   Code   RO          657    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x080018ec   0x080018ec   0x00000038   Code   RO          669    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x08001924   0x08001924   0x00000032   Code   RO          665    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x08001956   0x08001956   0x00000002   PAD
    0x08001958   0x08001958   0x00000070   Code   RO          927    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x080019c8   0x080019c8   0x00000038   Code   RO          818    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x08001a00   0x08001a00   0x00000054   Code   RO          820    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x08001a54   0x08001a54   0x0000000c   Code   RO          705    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x08001a60   0x08001a60   0x00000024   Code   RO          677    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x08001a84   0x08001a84   0x0000001e   Code   RO          533    .text.os_kernel_is_active  rtx_lib.o
    0x08001aa2   0x08001aa2   0x00000002   PAD
    0x08001aa4   0x08001aa4   0x00000042   Code   RO           55    .text.step          gpio.o
    0x08001ae6   0x08001ae6   0x00000002   PAD
    0x08001ae8   0x08001ae8   0x0000000c   Code   RO          586    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08001af4   0x08001af4   0x00000150   Code   RO          616    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08001c44   0x08001c44   0x00000088   Code   RO          618    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x08001ccc   0x08001ccc   0x000000e0   Code   RO         1012    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001dac   0x08001dac   0x00000130   Code   RO          998    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001edc   0x08001edc   0x000000bc   Code   RO         1008    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001f98   0x08001f98   0x00000094   Code   RO          796    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x0800202c   0x0800202c   0x000000ac   Code   RO          802    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x080020d8   0x080020d8   0x00000068   Code   RO          792    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x08002140   0x08002140   0x000000b4   Code   RO          798    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x080021f4   0x080021f4   0x00000068   Code   RO          751    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x0800225c   0x0800225c   0x000001d0   Code   RO          675    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x0800242c   0x0800242c   0x0000001a   Code   RO         1123    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08002446   0x08002446   0x00000002   PAD
    0x08002448   0x08002448   0x000000a0   Data   RO          547    .rodata             rtx_lib.o
    0x080024e8   0x080024e8   0x00000010   Data   RO           18    .rodata.AHBPrescTable  system_stm32f4xx.o
    0x080024f8   0x080024f8   0x00000010   Data   RO          262    .rodata.APBAHBPrescTable  stm32f4xx_rcc.o
    0x08002508   0x08002508   0x00000004   Data   RO          549    .rodata.osRtxUserSVC  rtx_lib.o
    0x0800250c   0x0800250c   0x00000024   Data   RO          544    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08002530   0x08002530   0x00000018   Data   RO          546    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08002548   0x08002548   0x00000024   Data   RO          545    .rodata.os_timer_thread_attr  rtx_lib.o
    0x0800256c   0x0800256c   0x0000000b   Data   RO          630    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x08002577   0x08002577   0x00000001   PAD
    0x08002578   0x08002578   0x00000020   Data   RO         1198    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08002598, Size: 0x000000a8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002598   0x00000004   Data   RW           17    .data.SystemCoreClock  system_stm32f4xx.o
    0x20000004   0x0800259c   0x000000a4   Data   RW          631    .data.os            RTX_CM4F.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200000a8, Load base: 0x08002640, Size: 0x00008bd0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000a8        -       0x00000060   Zero   RW         1065    .bss                c_w.l(libspace.o)
    0x20000108        -       0x00000001   Zero   RW          960    .bss.PendST         RTX_CM4F.lib(os_systick.o)
    0x20000109   0x08002640   0x00000003   PAD
    0x2000010c        -       0x00000004   Zero   RW           38    .bss.last_theta_1   main.o
    0x20000110        -       0x00000004   Zero   RW           39    .bss.last_theta_2   main.o
    0x20000114        -       0x00000004   Zero   RW           40    .bss.last_theta_3   main.o
    0x20000118        -       0x00008040   Zero   RW          543    .bss.os             rtx_lib.o
    0x20008158        -       0x00000034   Zero   RW          553    .bss.os.msgqueue.cb  rtx_lib.o
    0x2000818c        -       0x00000050   Zero   RW          554    .bss.os.msgqueue.mem  rtx_lib.o
    0x200081dc        -       0x00000088   Zero   RW          551    .bss.os.thread.cb   rtx_lib.o
    0x20008264   0x08002640   0x00000004   PAD
    0x20008268        -       0x00000400   Zero   RW          552    .bss.os.thread.stack  rtx_lib.o
    0x20008668        -       0x00000001   Zero   RW          555    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20008669   0x08002640   0x00000003   PAD
    0x2000866c        -       0x00000004   Zero   RW           35    .bss.theta_1        main.o
    0x20008670        -       0x00000004   Zero   RW           36    .bss.theta_2        main.o
    0x20008674        -       0x00000004   Zero   RW           37    .bss.theta_3        main.o
    0x20008678        -       0x00000200   Zero   RW            2    HEAP                startup_stm32f40_41xxx.o
    0x20008878        -       0x00000400   Zero   RW            1    STACK               startup_stm32f40_41xxx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        94          0          0          0          0       2176   delay.o
       108          0          0          0          0       2214   gpio.o
       158          0          0          0          0       4110   interrupt.o
       396          0          0          0         24       1759   main.o
        98          0          0          0          0       3255   misc.o
         4          0          0          0          0        781   rtx_config.o
       128          0        260          0      34125       7198   rtx_lib.o
        64         26        392          0       1536        868   startup_stm32f40_41xxx.o
       182          0          0          0          0       4518   stm32f4xx_gpio.o
       198          0         16          0          0      12220   stm32f4xx_rcc.o
       214          0          0          0          0      23311   stm32f4xx_tim.o
       200          0          0          0          0       7774   stm32f4xx_usart.o
       402          0         16          4          0       3286   system_stm32f4xx.o
       132          0          0          0          0       2899   uart.o

    ----------------------------------------------------------------------
      2424         26        716          4      35692      76369   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        46          0          0          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        540   irq_cm4f.o
       114         20          0          0          1       3108   os_systick.o
       614         48         11        164          0      17231   rtx_kernel.o
       242          0          0          0          0       2478   rtx_memory.o
       186          0          0          0          0      16576   rtx_mempool.o
      1346         24          0          0          0      18694   rtx_msgqueue.o
       886         28          0          0          0      10004   rtx_mutex.o
       360         18          0          0          0       5437   rtx_system.o
      1608         52          0          0          0      32850   rtx_thread.o
       212         16          0          0          0      10445   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      6472        234         12        164        100     118359   Library Totals
        14          0          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5764        218         11        164          1     117363   RTX_CM4F.lib
       668         16          0          0         96        880   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      6472        234         12        164        100     118359   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8896        260        728        168      35792     193928   Grand Totals
      8896        260        728        168      35792     193928   ELF Image Totals
      8896        260        728        168          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 9624 (   9.40kB)
    Total RW  Size (RW Data + ZI Data)             35960 (  35.12kB)
    Total ROM Size (Code + RO Data + RW Data)       9792 (   9.56kB)

==============================================================================

